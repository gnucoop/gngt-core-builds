{"version":3,"file":"core-calendar.umd.min.js","sources":["../../src/core/calendar/calendar.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterContentInit, ChangeDetectorRef, EventEmitter, forwardRef, OnInit\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {Observable} from 'rxjs';\n\nimport {\n  addDays, addMonths, addWeeks, addYears, endOfDay, endOfISOWeek, endOfMonth, endOfWeek, endOfYear,\n  format, isAfter, isBefore, isSameDay, parse, setISODay, startOfDay, startOfISOWeek,\n  startOfMonth, startOfWeek, startOfYear, subMonths, subWeeks, subYears\n} from 'date-fns';\n\n\nexport const CALENDAR_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Calendar),\n  multi: true\n};\n\nconst weekDays: string[] = [\n  '', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'\n];\n\nexport type CalendarViewMode = ('month' | 'year' | 'decade');\nexport type CalendarPeriodType = ('day' | 'week' | 'month' | 'year');\nexport type CalendarEntryType = ('day' | 'month' | 'year');\nexport type CalendarWeekDay = (\n  'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday'\n);\nexport type CalendarEntrySelectedState = ('none' | 'partial' | 'full');\n\nexport class CalendarPeriod {\n  type: CalendarPeriodType;\n  startDate: Date;\n  endDate: Date;\n}\n\nexport class CalendarChange {\n  source: Calendar;\n  period: CalendarPeriod | null;\n}\n\nexport class CalendarEntry {\n  type: CalendarEntryType;\n  date: Date;\n  selected: CalendarEntrySelectedState;\n  disabled = false;\n  highlight = false;\n\n  constructor(params: {\n    type: CalendarEntryType,\n    date: Date,\n    selected: CalendarEntrySelectedState,\n    highlight?: boolean,\n    disabled?: boolean\n  }) {\n    let keys = Object.keys(params);\n\n    this.type = params.type;\n    this.date = params.date;\n    this.selected = params.selected;\n    if (keys.indexOf('disabled') > -1) {\n      this.disabled = params.disabled!;\n    }\n    if (keys.indexOf('highlight') > -1) {\n      this.highlight = params.highlight!;\n    }\n  }\n\n  toString(): string {\n    if (this.type === 'day') {\n      return `${this.date.getDate()}`;\n    }\n    if (this.type === 'month') {\n      return format(this.date, 'MMM');\n    }\n    return `${this.date.getFullYear()}`;\n  }\n\n  getRange(): { start: Date, end: Date } {\n    if (this.type === 'day') {\n      return { start: new Date(this.date), end: new Date(this.date) };\n    } else {\n      let curDate: Date = new Date(this.date);\n      return {\n        start: this.type === 'month' ? startOfMonth(curDate) : startOfYear(curDate),\n        end: this.type === 'month' ? endOfMonth(curDate) : endOfYear(curDate)\n      };\n    }\n  }\n}\n\nexport abstract class Calendar implements AfterContentInit, ControlValueAccessor, OnInit {\n  get viewDate(): Date { return this._viewDate; }\n  set viewDate(viewDate: Date) { this._setViewDate(viewDate); }\n\n  private _disabled = false;\n  get disabled(): boolean { return this._disabled; }\n  set disabled(disabled: boolean) {\n    const newDisabled = disabled != null && `${disabled}` !== 'false';\n    if (newDisabled !== this._disabled) {\n      this._disabled = newDisabled;\n      this._cdr.markForCheck();\n    }\n  }\n\n  private _dateOnlyForDay = false;\n  get dateOnlyForDay(): boolean { return this._disabled; }\n  set dateOnlyForDay(dateOnlyForDay: boolean) {\n    this._dateOnlyForDay = dateOnlyForDay != null && `${dateOnlyForDay}` !== 'false';\n  }\n\n  private _viewMode: CalendarViewMode = 'month';\n  get viewMode(): CalendarViewMode { return this._viewMode; }\n  set viewMode(viewMode: CalendarViewMode) {\n    this._viewMode = viewMode;\n    this._buildCalendar();\n  }\n\n  private _selectionMode: CalendarPeriodType = 'day';\n  get selectionMode(): CalendarPeriodType { return this._selectionMode; }\n  set selectionMode(selectionMode: CalendarPeriodType) {\n    this._selectionMode = selectionMode;\n  }\n\n  private _startOfWeekDay = 1;\n  get startOfWeekDay(): CalendarWeekDay {\n    return <CalendarWeekDay>weekDays[this._startOfWeekDay];\n  }\n  set startOfWeekDay(weekDay: CalendarWeekDay) {\n    this._startOfWeekDay = weekDays.indexOf(weekDay);\n\n    if (this._viewMode === 'month') {\n      this._buildCalendar();\n    }\n  }\n\n  private _isoMode: boolean = false;\n\n  get isoMode(): boolean { return this._isoMode; }\n  set isoMode(isoMode: boolean) { this._isoMode = isoMode; }\n\n  private _minDate: Date | null;\n  get minDate(): Date | null { return this._minDate; }\n  set minDate(minDate: Date | null) {\n    this._minDate = minDate != null ? new Date(minDate.valueOf()) : null;\n  }\n\n  private _maxDate: Date | null;\n  get maxDate(): Date | null { return this._maxDate; }\n  set maxDate(maxDate: Date | null) {\n    this._maxDate = maxDate != null ? new Date(maxDate.valueOf()) : null;\n  }\n\n  private _change: EventEmitter<CalendarChange> = new EventEmitter<CalendarChange>();\n  get change(): Observable<CalendarChange> {\n    return this._change.asObservable();\n  }\n\n  private _selectedPeriod: CalendarPeriod | null;\n  private set selectedPeriod(period: CalendarPeriod | null) {\n    this._selectedPeriod = period;\n    this._change.emit({\n      source: this,\n      period: period\n    });\n    this._refreshSelection();\n  }\n\n  get value(): CalendarPeriod | Date | null {\n    if (this._dateOnlyForDay && this.selectionMode === 'day') {\n      return this._selectedPeriod != null ? this._selectedPeriod.startDate : null;\n    }\n    return this._selectedPeriod;\n  }\n  set value(period: CalendarPeriod | Date | null) {\n    if (this._dateOnlyForDay && this.selectionMode === 'day') {\n      if (period instanceof Date &&\n        (this._selectedPeriod == null || period !== this._selectedPeriod.startDate)) {\n        this.selectedPeriod = {\n          type: 'day',\n          startDate: period,\n          endDate: period\n        };\n        this._onChangeCallback(period);\n      }\n    } else if (period instanceof Object && period !== this._selectedPeriod) {\n      this.selectedPeriod = <CalendarPeriod>period;\n      this._onChangeCallback(period);\n    }\n  }\n\n  get calendarRows(): CalendarEntry[][] { return this._calendarRows; }\n  get viewHeader(): string { return this._viewHeader; }\n  get weekDays(): string[] { return this._weekDays; }\n\n  private _viewDate: Date = new Date();\n  private _viewHeader = '';\n\n  private _calendarRows: CalendarEntry[][] = [];\n  private _weekDays: string[] = [];\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n\n  prevPage(): void {\n    if (this._viewMode == 'month') {\n      this.viewDate = subMonths(this.viewDate, 1);\n    } else if (this._viewMode == 'year') {\n      this.viewDate = subYears(this.viewDate, 1);\n    }\n    this._buildCalendar();\n  }\n\n  nextPage(): void {\n    if (this._viewMode == 'month') {\n      this.viewDate = addMonths(this.viewDate, 1);\n    } else if (this._viewMode == 'year') {\n      this.viewDate = addYears(this.viewDate, 1);\n    }\n    this._buildCalendar();\n  }\n\n  previousViewMode(): void {\n    if (this._viewMode == 'decade') {\n      return;\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'decade';\n    } else if (this._viewMode == 'month') {\n      this._viewMode = 'year';\n    }\n    this._buildCalendar();\n  }\n\n  selectEntry(entry: CalendarEntry): void {\n    if (!this._canSelectEntry(entry)) {\n      return this._nextViewMode(entry);\n    }\n\n    let newPeriod: CalendarPeriod | null = null;\n    if (this._isEntrySelected(entry) == 'full') {\n      newPeriod = null;\n    } else if (this._selectionMode == 'day') {\n      newPeriod = {\n        type: 'day',\n        startDate: entry.date,\n        endDate: entry.date\n      };\n    } else if (this._selectionMode == 'week') {\n      newPeriod = {\n        type: 'week',\n        startDate: this._isoMode ?\n          startOfISOWeek(entry.date) :\n          startOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay}),\n        endDate: this._isoMode ?\n          endOfISOWeek(entry.date) :\n          endOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay})\n      };\n    } else if (this._selectionMode == 'month') {\n      const monthBounds = this._getMonthStartEnd(entry.date);\n      newPeriod = {\n        type: 'month',\n        startDate: new Date(monthBounds.start),\n        endDate: new Date(monthBounds.end)\n      };\n    } else if (this._selectionMode == 'year') {\n      newPeriod = {\n        type: 'year',\n        startDate: startOfYear(entry.date),\n        endDate: endOfYear(entry.date)\n      };\n    }\n    this.value = newPeriod;\n\n    this._cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  writeValue(value: any) {\n    if (typeof value === 'string') {\n      value = parse(value);\n    }\n    this.value = value;\n  }\n\n  ngOnInit(): void {\n    this._buildCalendar();\n  }\n\n  ngAfterContentInit(): void {\n    this._refreshSelection();\n  }\n\n  private _onChangeCallback: (_: any) => void = (_: any) => { };\n  // tslint:disable-next-line\n  private _onTouchedCallback: (_: any) => void = (_: any) => { };\n\n  private _setViewDate(date: Date): void {\n    this._viewDate = date;\n  }\n\n  private _getMonthStartEnd(date: Date): { start: Date, end: Date } {\n    let startDate = startOfMonth(date);\n    let endDate = endOfMonth(date);\n    if (this._isoMode) {\n      const startWeekDay = startDate.getDay();\n      const endWeekDay = endDate.getDay();\n      if (startWeekDay == 0 || startWeekDay > 4) {\n        startDate = addWeeks(startDate, 1);\n      }\n      if (endWeekDay > 0 && endWeekDay < 4) {\n        endDate = subWeeks(endDate, 1);\n      }\n      startDate = startOfISOWeek(startDate);\n      endDate = endOfISOWeek(endDate);\n    }\n    return { start: startDate, end: endDate };\n  }\n\n  private _buildCalendar(): void {\n    if (this._viewMode == 'month') {\n      this._buildMonthView();\n    } else if (this._viewMode == 'year') {\n      this._buildYearView();\n    } else if (this._viewMode == 'decade') {\n      this._buildDecadeView();\n    }\n    this._cdr.markForCheck();\n  }\n\n  private _buildDecadeView(): void {\n    let curYear: number = this._viewDate.getFullYear();\n    let firstYear = curYear - (curYear % 10) + 1;\n    let lastYear = firstYear + 11;\n\n    this._viewHeader = `${firstYear} - ${lastYear}`;\n\n    let curDate: Date = startOfYear(this._viewDate);\n    curDate.setFullYear(firstYear);\n\n    let rows: CalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: CalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry = new CalendarEntry({\n          type: 'year',\n          date: date,\n          selected: 'none'\n        });\n        newEntry.selected = this._isEntrySelected(newEntry);\n        row.push(newEntry);\n        curDate = addYears(curDate, 1);\n      }\n      rows.push(row);\n    }\n    this._calendarRows = rows;\n  }\n\n  private _buildYearView(): void {\n    this._viewHeader = `${this._viewDate.getFullYear()}`;\n\n    let curDate: Date = startOfYear(this._viewDate);\n\n    let rows: CalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: CalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry = new CalendarEntry({\n          type: 'month',\n          date: date,\n          selected: 'none'\n        });\n        newEntry.selected = this._isEntrySelected(newEntry);\n        row.push(newEntry);\n        curDate = addMonths(curDate, 1);\n      }\n      rows.push(row);\n    }\n    this._calendarRows = rows;\n  }\n\n  private _buildMonthView(): void {\n    this._viewHeader = format(this._viewDate, 'MMM YYYY');\n\n    this._buildMonthViewWeekDays();\n    const monthBounds = this._getMonthStartEnd(this._viewDate);\n    let viewStartDate: Date = new Date(monthBounds.start);\n    let viewEndDate: Date = new Date(monthBounds.end);\n    if (!this._isoMode) {\n      viewStartDate = startOfWeek(viewStartDate);\n      viewEndDate = endOfWeek(viewEndDate);\n    }\n\n    let rows: CalendarEntry[][] = [];\n    let todayDate = new Date();\n    let curDate = new Date(viewStartDate);\n    let minDate = this.minDate == null ? null : new Date(this.minDate);\n    let maxDate = this.maxDate == null ? null : new Date(this.maxDate);\n    while (curDate < viewEndDate) {\n      let row: CalendarEntry[] = [];\n      for (let i = 0; i < 7; i++) {\n        let disabled = (minDate != null && isBefore(curDate, minDate)) ||\n          (maxDate != null && isAfter(curDate, maxDate));\n        let date = new Date(curDate);\n        let newEntry: CalendarEntry = new CalendarEntry({\n          type: 'day',\n          date: date,\n          selected: 'none',\n          highlight: format(todayDate, 'YYYY-MM-DD') === format(curDate, 'YYYY-MM-DD'),\n          disabled: disabled\n        });\n        newEntry.selected = this._isEntrySelected(newEntry);\n        row.push(newEntry);\n        curDate = addDays(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    this._calendarRows = rows;\n  }\n\n  private _buildMonthViewWeekDays(): void {\n    let curDate: Date;\n    if (this._isoMode) {\n      curDate = setISODay(startOfWeek(this._viewDate), 1);\n    } else {\n      curDate = startOfWeek(this._viewDate);\n    }\n    let weekDayNames: string[] = [];\n    for (let i = 0; i < 7; i++) {\n      weekDayNames.push(format(curDate, 'dddd'));\n      curDate = addDays(curDate, 1);\n    }\n    this._weekDays = weekDayNames;\n    this._cdr.markForCheck();\n  }\n\n  private _periodOrder(entryType: CalendarPeriodType): number {\n    return ['day', 'week', 'month', 'year'].indexOf(entryType);\n  }\n\n  private _isEntrySelected(entry: CalendarEntry): CalendarEntrySelectedState {\n    if (\n      this._selectedPeriod != null && this._selectedPeriod.startDate != null &&\n      this._selectedPeriod.endDate != null\n    ) {\n      let selectionStart: Date = startOfDay(this._selectedPeriod.startDate);\n      let selectionEnd: Date = endOfDay(this._selectedPeriod.endDate);\n      let selectionPeriodOrder: number = this._periodOrder(this._selectedPeriod.type);\n\n      let entryPeriodOrder: number = this._periodOrder(entry.type);\n      let entryRange: { start: Date, end: Date } = entry.getRange();\n\n      if (entryPeriodOrder <= selectionPeriodOrder &&\n        this._isBetween(entryRange.start, selectionStart, selectionEnd) &&\n        this._isBetween(entryRange.end, selectionStart, selectionEnd)\n      ) {\n        return 'full';\n      } else if (entryPeriodOrder > selectionPeriodOrder &&\n        this._isBetween(selectionStart, entryRange.start, entryRange.end) &&\n        this._isBetween(selectionEnd, entryRange.start, entryRange.end)\n      ) {\n        return 'partial';\n      }\n    }\n\n    return 'none';\n  }\n\n  private _isBetween(date: Date, rangeLeft: Date, rangeRight: Date): boolean {\n    return (isAfter(date, rangeLeft) || isSameDay(date, rangeLeft))\n      && (isBefore(date, rangeRight) || isSameDay(date, rangeRight));\n  }\n\n  private _refreshSelection(): void {\n    for (let row of this._calendarRows) {\n      for (let entry of row) {\n        entry.selected = this._isEntrySelected(entry);\n      }\n    }\n  }\n\n  private _canSelectEntry(entry: CalendarEntry): boolean {\n    if (['day', 'week'].indexOf(this._selectionMode) >= 0 && entry.type != 'day') {\n      return false;\n    }\n    if (this._selectionMode == 'month' && entry.type == 'year') {\n      return false;\n    }\n    return true;\n  }\n\n  private _nextViewMode(entry: CalendarEntry): void {\n    if (this._viewMode == 'decade') {\n      this._viewMode = 'year';\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'month';\n    } else if (this._viewMode == 'month') {\n      return;\n    }\n    this._viewDate = entry.date;\n    this._buildCalendar();\n  }\n}\n"],"names":["CalendarPeriod","CalendarChange","CALENDAR_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","Calendar","multi","weekDays","CalendarEntry","prototype","toString","this","type","date","getDate","format","getFullYear","getRange","start","Date","end","curDate","startOfMonth","startOfYear","endOfMonth","endOfYear","params","disabled","highlight","keys","Object","selected","indexOf","defineProperty","_viewDate","viewDate","_setViewDate","_disabled","newDisabled","_cdr","markForCheck","dateOnlyForDay","_dateOnlyForDay","_viewMode","viewMode","_buildCalendar","_selectionMode","selectionMode","_startOfWeekDay","weekDay","_isoMode","isoMode","_minDate","minDate","valueOf","_maxDate","maxDate","_change","asObservable","period","_selectedPeriod","emit","source","_refreshSelection","startDate","selectedPeriod","endDate","_onChangeCallback","_calendarRows","_viewHeader","_weekDays","prevPage","subMonths","subYears","nextPage","addMonths","addYears","previousViewMode","selectEntry","entry","_canSelectEntry","_nextViewMode","newPeriod","_isEntrySelected","startOfISOWeek","startOfWeek","weekStartsOn","endOfISOWeek","endOfWeek","monthBounds","_getMonthStartEnd","value","registerOnChange","fn","registerOnTouched","_onTouchedCallback","writeValue","parse","ngOnInit","ngAfterContentInit","startWeekDay","getDay","endWeekDay","addWeeks","subWeeks","_buildMonthView","_buildYearView","_buildDecadeView","curYear","firstYear","lastYear","setFullYear","rows","i","row","j","newEntry","push","_buildMonthViewWeekDays","viewStartDate","viewEndDate","todayDate","isBefore","isAfter","addDays","setISODay","weekDayNames","_periodOrder","entryType","selectionStart","startOfDay","selectionEnd","endOfDay","selectionPeriodOrder","entryPeriodOrder","entryRange","_isBetween","rangeLeft","rangeRight","isSameDay","_i","_a","length","_b","row_1","EventEmitter","_"],"mappings":"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"}