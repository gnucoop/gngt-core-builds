{"version":3,"file":"core-calendar.umd.min.js","sources":["../../src/core/calendar/calendar.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterContentInit, ChangeDetectorRef, EventEmitter, forwardRef, OnInit\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {Observable} from 'rxjs';\n\nimport {\n  addDays, addMonths, addWeeks, addYears, endOfDay, endOfISOWeek, endOfMonth, endOfWeek, endOfYear,\n  format, isAfter, isBefore, isSameDay, parse, setISODay, startOfDay, startOfISOWeek,\n  startOfMonth, startOfWeek, startOfYear, subMonths, subWeeks, subYears\n} from 'date-fns';\n\n\nexport const CALENDAR_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Calendar),\n  multi: true\n};\n\nconst weekDays: string[] = [\n  '', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'\n];\n\nexport type CalendarViewMode = ('month' | 'year' | 'decade');\nexport type CalendarPeriodType = ('day' | 'week' | 'month' | 'year');\nexport type CalendarEntryType = ('day' | 'month' | 'year');\nexport type CalendarWeekDay = (\n  'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday'\n);\nexport type CalendarEntrySelectedState = ('none' | 'partial' | 'full');\n\nexport class CalendarPeriod {\n  type: CalendarPeriodType;\n  startDate: Date;\n  endDate: Date;\n}\n\nexport class CalendarChange {\n  source: Calendar;\n  period: CalendarPeriod | null;\n}\n\nexport class CalendarEntry {\n  type: CalendarEntryType;\n  date: Date;\n  selected: CalendarEntrySelectedState;\n  disabled = false;\n  highlight = false;\n\n  constructor(params: {\n    type: CalendarEntryType,\n    date: Date,\n    selected: CalendarEntrySelectedState,\n    highlight?: boolean,\n    disabled?: boolean\n  }) {\n    let keys = Object.keys(params);\n\n    this.type = params.type;\n    this.date = params.date;\n    this.selected = params.selected;\n    if (keys.indexOf('disabled') > -1) {\n      this.disabled = params.disabled!;\n    }\n    if (keys.indexOf('highlight') > -1) {\n      this.highlight = params.highlight!;\n    }\n  }\n\n  toString(): string {\n    if (this.type === 'day') {\n      return `${this.date.getDate()}`;\n    }\n    if (this.type === 'month') {\n      return format(this.date, 'MMM');\n    }\n    return `${this.date.getFullYear()}`;\n  }\n\n  getRange(): { start: Date, end: Date } {\n    if (this.type === 'day') {\n      return { start: new Date(this.date), end: new Date(this.date) };\n    } else {\n      let curDate: Date = new Date(this.date);\n      return {\n        start: this.type === 'month' ? startOfMonth(curDate) : startOfYear(curDate),\n        end: this.type === 'month' ? endOfMonth(curDate) : endOfYear(curDate)\n      };\n    }\n  }\n}\n\nexport abstract class Calendar implements AfterContentInit, ControlValueAccessor, OnInit {\n  get viewDate(): Date { return this._viewDate; }\n  set viewDate(viewDate: Date) { this._setViewDate(viewDate); }\n\n  private _disabled = false;\n  get disabled(): boolean { return this._disabled; }\n  set disabled(disabled: boolean) {\n    const newDisabled = disabled != null && `${disabled}` !== 'false';\n    if (newDisabled !== this._disabled) {\n      this._disabled = newDisabled;\n      this._cdr.markForCheck();\n    }\n  }\n\n  private _dateOnlyForDay = false;\n  get dateOnlyForDay(): boolean { return this._disabled; }\n  set dateOnlyForDay(dateOnlyForDay: boolean) {\n    this._dateOnlyForDay = dateOnlyForDay != null && `${dateOnlyForDay}` !== 'false';\n  }\n\n  private _viewMode: CalendarViewMode = 'month';\n  get viewMode(): CalendarViewMode { return this._viewMode; }\n  set viewMode(viewMode: CalendarViewMode) {\n    this._viewMode = viewMode;\n    this._buildCalendar();\n  }\n\n  private _selectionMode: CalendarPeriodType = 'day';\n  get selectionMode(): CalendarPeriodType { return this._selectionMode; }\n  set selectionMode(selectionMode: CalendarPeriodType) {\n    this._selectionMode = selectionMode;\n  }\n\n  private _startOfWeekDay = 1;\n  get startOfWeekDay(): CalendarWeekDay {\n    return <CalendarWeekDay>weekDays[this._startOfWeekDay];\n  }\n  set startOfWeekDay(weekDay: CalendarWeekDay) {\n    this._startOfWeekDay = weekDays.indexOf(weekDay);\n\n    if (this._viewMode === 'month') {\n      this._buildCalendar();\n    }\n  }\n\n  private _isoMode: boolean = false;\n\n  get isoMode(): boolean { return this._isoMode; }\n  set isoMode(isoMode: boolean) { this._isoMode = isoMode; }\n\n  private _minDate: Date | null;\n  get minDate(): Date | null { return this._minDate; }\n  set minDate(minDate: Date | null) {\n    this._minDate = minDate != null ? new Date(minDate.valueOf()) : null;\n  }\n\n  private _maxDate: Date | null;\n  get maxDate(): Date | null { return this._maxDate; }\n  set maxDate(maxDate: Date | null) {\n    this._maxDate = maxDate != null ? new Date(maxDate.valueOf()) : null;\n  }\n\n  private _change: EventEmitter<CalendarChange> = new EventEmitter<CalendarChange>();\n  get change(): Observable<CalendarChange> {\n    return this._change.asObservable();\n  }\n\n  private _selectedPeriod: CalendarPeriod | null;\n  private set selectedPeriod(period: CalendarPeriod | null) {\n    this._selectedPeriod = period;\n    this._change.emit({\n      source: this,\n      period: period\n    });\n    this._refreshSelection();\n  }\n\n  get value(): CalendarPeriod | Date | null {\n    if (this._dateOnlyForDay && this.selectionMode === 'day') {\n      return this._selectedPeriod != null ? this._selectedPeriod.startDate : null;\n    }\n    return this._selectedPeriod;\n  }\n  set value(period: CalendarPeriod | Date | null) {\n    if (this._dateOnlyForDay && this.selectionMode === 'day') {\n      if (period instanceof Date &&\n        (this._selectedPeriod == null || period !== this._selectedPeriod.startDate)) {\n        this.selectedPeriod = {\n          type: 'day',\n          startDate: period,\n          endDate: period\n        };\n        this._onChangeCallback(period);\n      }\n    } else if (period instanceof Object && period !== this._selectedPeriod) {\n      this.selectedPeriod = <CalendarPeriod>period;\n      this._onChangeCallback(period);\n    }\n  }\n\n  get calendarRows(): CalendarEntry[][] { return this._calendarRows; }\n  get viewHeader(): string { return this._viewHeader; }\n  get weekDays(): string[] { return this._weekDays; }\n\n  private _viewDate: Date = new Date();\n  private _viewHeader = '';\n\n  private _calendarRows: CalendarEntry[][] = [];\n  private _weekDays: string[] = [];\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n\n  prevPage(): void {\n    if (this._viewMode == 'month') {\n      this.viewDate = subMonths(this.viewDate, 1);\n    } else if (this._viewMode == 'year') {\n      this.viewDate = subYears(this.viewDate, 1);\n    }\n    this._buildCalendar();\n  }\n\n  nextPage(): void {\n    if (this._viewMode == 'month') {\n      this.viewDate = addMonths(this.viewDate, 1);\n    } else if (this._viewMode == 'year') {\n      this.viewDate = addYears(this.viewDate, 1);\n    }\n    this._buildCalendar();\n  }\n\n  previousViewMode(): void {\n    if (this._viewMode == 'decade') {\n      return;\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'decade';\n    } else if (this._viewMode == 'month') {\n      this._viewMode = 'year';\n    }\n    this._buildCalendar();\n  }\n\n  selectEntry(entry: CalendarEntry): void {\n    if (!this._canSelectEntry(entry)) {\n      return this._nextViewMode(entry);\n    }\n\n    let newPeriod: CalendarPeriod | null = null;\n    if (this._isEntrySelected(entry) == 'full') {\n      newPeriod = null;\n    } else if (this._selectionMode == 'day') {\n      newPeriod = {\n        type: 'day',\n        startDate: entry.date,\n        endDate: entry.date\n      };\n    } else if (this._selectionMode == 'week') {\n      newPeriod = {\n        type: 'week',\n        startDate: this._isoMode ?\n          startOfISOWeek(entry.date) :\n          startOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay}),\n        endDate: this._isoMode ?\n          endOfISOWeek(entry.date) :\n          endOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay})\n      };\n    } else if (this._selectionMode == 'month') {\n      const monthBounds = this._getMonthStartEnd(entry.date);\n      newPeriod = {\n        type: 'month',\n        startDate: new Date(monthBounds.start),\n        endDate: new Date(monthBounds.end)\n      };\n    } else if (this._selectionMode == 'year') {\n      newPeriod = {\n        type: 'year',\n        startDate: startOfYear(entry.date),\n        endDate: endOfYear(entry.date)\n      };\n    }\n    this.value = newPeriod;\n\n    this._cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  writeValue(value: any) {\n    if (typeof value === 'string') {\n      value = parse(value);\n    }\n    this.value = value;\n  }\n\n  ngOnInit(): void {\n    this._buildCalendar();\n  }\n\n  ngAfterContentInit(): void {\n    this._refreshSelection();\n  }\n\n  private _onChangeCallback: (_: any) => void = (_: any) => { };\n  // tslint:disable-next-line\n  private _onTouchedCallback: (_: any) => void = (_: any) => { };\n\n  private _setViewDate(date: Date): void {\n    this._viewDate = date;\n  }\n\n  private _getMonthStartEnd(date: Date): { start: Date, end: Date } {\n    let startDate = startOfMonth(date);\n    let endDate = endOfMonth(date);\n    if (this._isoMode) {\n      const startWeekDay = startDate.getDay();\n      const endWeekDay = endDate.getDay();\n      if (startWeekDay == 0 || startWeekDay > 4) {\n        startDate = addWeeks(startDate, 1);\n      }\n      if (endWeekDay > 0 && endWeekDay < 4) {\n        endDate = subWeeks(endDate, 1);\n      }\n      startDate = startOfISOWeek(startDate);\n      endDate = endOfISOWeek(endDate);\n    }\n    return { start: startDate, end: endDate };\n  }\n\n  private _buildCalendar(): void {\n    if (this._viewMode == 'month') {\n      this._buildMonthView();\n    } else if (this._viewMode == 'year') {\n      this._buildYearView();\n    } else if (this._viewMode == 'decade') {\n      this._buildDecadeView();\n    }\n    this._cdr.markForCheck();\n  }\n\n  private _buildDecadeView(): void {\n    let curYear: number = this._viewDate.getFullYear();\n    let firstYear = curYear - (curYear % 10) + 1;\n    let lastYear = firstYear + 11;\n\n    this._viewHeader = `${firstYear} - ${lastYear}`;\n\n    let curDate: Date = startOfYear(this._viewDate);\n    curDate.setFullYear(firstYear);\n\n    let rows: CalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: CalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry = new CalendarEntry({\n          type: 'year',\n          date: date,\n          selected: 'none'\n        });\n        newEntry.selected = this._isEntrySelected(newEntry);\n        row.push(newEntry);\n        curDate = addYears(curDate, 1);\n      }\n      rows.push(row);\n    }\n    this._calendarRows = rows;\n  }\n\n  private _buildYearView(): void {\n    this._viewHeader = `${this._viewDate.getFullYear()}`;\n\n    let curDate: Date = startOfYear(this._viewDate);\n\n    let rows: CalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: CalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry = new CalendarEntry({\n          type: 'month',\n          date: date,\n          selected: 'none'\n        });\n        newEntry.selected = this._isEntrySelected(newEntry);\n        row.push(newEntry);\n        curDate = addMonths(curDate, 1);\n      }\n      rows.push(row);\n    }\n    this._calendarRows = rows;\n  }\n\n  private _buildMonthView(): void {\n    this._viewHeader = format(this._viewDate, 'MMM YYYY');\n\n    this._buildMonthViewWeekDays();\n    const monthBounds = this._getMonthStartEnd(this._viewDate);\n    let viewStartDate: Date = new Date(monthBounds.start);\n    let viewEndDate: Date = new Date(monthBounds.end);\n    if (!this._isoMode) {\n      viewStartDate = startOfWeek(viewStartDate);\n      viewEndDate = endOfWeek(viewEndDate);\n    }\n\n    let rows: CalendarEntry[][] = [];\n    let todayDate = new Date();\n    let curDate = new Date(viewStartDate);\n    let minDate = this.minDate == null ? null : new Date(this.minDate);\n    let maxDate = this.maxDate == null ? null : new Date(this.maxDate);\n    while (curDate < viewEndDate) {\n      let row: CalendarEntry[] = [];\n      for (let i = 0; i < 7; i++) {\n        let disabled = (minDate != null && isBefore(curDate, minDate)) ||\n          (maxDate != null && isAfter(curDate, maxDate));\n        let date = new Date(curDate);\n        let newEntry: CalendarEntry = new CalendarEntry({\n          type: 'day',\n          date: date,\n          selected: 'none',\n          highlight: format(todayDate, 'YYYY-MM-DD') === format(curDate, 'YYYY-MM-DD'),\n          disabled: disabled\n        });\n        newEntry.selected = this._isEntrySelected(newEntry);\n        row.push(newEntry);\n        curDate = addDays(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    this._calendarRows = rows;\n  }\n\n  private _buildMonthViewWeekDays(): void {\n    let curDate: Date;\n    if (this._isoMode) {\n      curDate = setISODay(startOfWeek(this._viewDate), 1);\n    } else {\n      curDate = startOfWeek(this._viewDate);\n    }\n    let weekDayNames: string[] = [];\n    for (let i = 0; i < 7; i++) {\n      weekDayNames.push(format(curDate, 'dddd'));\n      curDate = addDays(curDate, 1);\n    }\n    this._weekDays = weekDayNames;\n    this._cdr.markForCheck();\n  }\n\n  private _periodOrder(entryType: CalendarPeriodType): number {\n    return ['day', 'week', 'month', 'year'].indexOf(entryType);\n  }\n\n  private _isEntrySelected(entry: CalendarEntry): CalendarEntrySelectedState {\n    if (\n      this._selectedPeriod != null && this._selectedPeriod.startDate != null &&\n      this._selectedPeriod.endDate != null\n    ) {\n      let selectionStart: Date = startOfDay(this._selectedPeriod.startDate);\n      let selectionEnd: Date = endOfDay(this._selectedPeriod.endDate);\n      let selectionPeriodOrder: number = this._periodOrder(this._selectedPeriod.type);\n\n      let entryPeriodOrder: number = this._periodOrder(entry.type);\n      let entryRange: { start: Date, end: Date } = entry.getRange();\n\n      if (entryPeriodOrder <= selectionPeriodOrder &&\n        this._isBetween(entryRange.start, selectionStart, selectionEnd) &&\n        this._isBetween(entryRange.end, selectionStart, selectionEnd)\n      ) {\n        return 'full';\n      } else if (entryPeriodOrder > selectionPeriodOrder &&\n        this._isBetween(selectionStart, entryRange.start, entryRange.end) &&\n        this._isBetween(selectionEnd, entryRange.start, entryRange.end)\n      ) {\n        return 'partial';\n      }\n    }\n\n    return 'none';\n  }\n\n  private _isBetween(date: Date, rangeLeft: Date, rangeRight: Date): boolean {\n    return (isAfter(date, rangeLeft) || isSameDay(date, rangeLeft))\n      && (isBefore(date, rangeRight) || isSameDay(date, rangeRight));\n  }\n\n  private _refreshSelection(): void {\n    for (let row of this._calendarRows) {\n      for (let entry of row) {\n        entry.selected = this._isEntrySelected(entry);\n      }\n    }\n  }\n\n  private _canSelectEntry(entry: CalendarEntry): boolean {\n    if (['day', 'week'].indexOf(this._selectionMode) >= 0 && entry.type != 'day') {\n      return false;\n    }\n    if (this._selectionMode == 'month' && entry.type == 'year') {\n      return false;\n    }\n    return true;\n  }\n\n  private _nextViewMode(entry: CalendarEntry): void {\n    if (this._viewMode == 'decade') {\n      this._viewMode = 'year';\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'month';\n    } else if (this._viewMode == 'month') {\n      return;\n    }\n    this._viewDate = entry.date;\n    this._buildCalendar();\n  }\n}\n"],"names":["CALENDAR_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","Calendar","multi","weekDays","CalendarPeriod","CalendarChange","CalendarEntry","params","this","disabled","highlight","keys","Object","type","date","selected","indexOf","prototype","toString","getDate","format","getFullYear","getRange","start","Date","end","curDate","startOfMonth","startOfYear","endOfMonth","endOfYear","_cdr","_disabled","_dateOnlyForDay","_viewMode","_selectionMode","_startOfWeekDay","_isoMode","_change","EventEmitter","_viewDate","_viewHeader","_calendarRows","_weekDays","_onChangeCallback","_","_onTouchedCallback","defineProperty","viewDate","_setViewDate","newDisabled","markForCheck","dateOnlyForDay","viewMode","_buildCalendar","selectionMode","weekDay","isoMode","_minDate","minDate","valueOf","_maxDate","maxDate","asObservable","period","_selectedPeriod","emit","source","_refreshSelection","startDate","selectedPeriod","endDate","prevPage","subMonths","subYears","nextPage","addMonths","addYears","previousViewMode","selectEntry","entry","_canSelectEntry","_nextViewMode","newPeriod","_isEntrySelected","startOfISOWeek","startOfWeek","weekStartsOn","endOfISOWeek","endOfWeek","monthBounds","_getMonthStartEnd","value","registerOnChange","fn","registerOnTouched","writeValue","parse","ngOnInit","ngAfterContentInit","startWeekDay","getDay","endWeekDay","addWeeks","subWeeks","_buildMonthView","_buildYearView","_buildDecadeView","curYear","firstYear","lastYear","setFullYear","rows","i","row","j","newEntry","push","_buildMonthViewWeekDays","viewStartDate","viewEndDate","todayDate","isBefore","isAfter","addDays","setISODay","weekDayNames","_periodOrder","entryType","selectionStart","startOfDay","selectionEnd","endOfDay","selectionPeriodOrder","entryPeriodOrder","entryRange","_isBetween","rangeLeft","rangeRight","isSameDay","_i","_a","length","_b","row_1"],"mappings":"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"}