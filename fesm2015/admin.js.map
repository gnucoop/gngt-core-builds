{"version":3,"file":"admin.js","sources":["../../../../../../src/core/admin/choices-pipe.ts","../../../../../../src/core/admin/admin-module.ts","../../../../../../src/core/admin/admin-user-interactions.ts","../../../../../../src/core/admin/edit.ts","../../../../../../src/core/admin/edit-field.ts","../../../../../../src/core/admin/edit-field-choice.ts","../../../../../../src/core/admin/edit-field-subtype.ts","../../../../../../src/core/admin/edit-field-type.ts","../../../../../../src/core/admin/edit-model.ts","../../../../../../src/core/admin/list.ts","../../../../../../src/core/admin/list-header.ts","../../../../../../src/core/admin/process-data-fn.ts","../../../../../../src/core/admin/public-api.ts","../../../../../../src/core/admin/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AsyncPipe} from '@angular/common';\nimport {ChangeDetectorRef, Pipe, PipeTransform} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {AdminEditFieldChoice} from './edit-field-choice';\n\n@Pipe({name: 'gngtChoices', pure: false})\nexport class ChoicesPipe implements PipeTransform {\n  private _asyncPipe: AsyncPipe;\n\n  constructor(cdr: ChangeDetectorRef) {\n    this._asyncPipe = new AsyncPipe(cdr);\n  }\n\n  transform(value: AdminEditFieldChoice[]|Observable<AdminEditFieldChoice[]>|\n            Promise<AdminEditFieldChoice[]>|null|undefined): AdminEditFieldChoice[] {\n    if (value == null) {\n      return [];\n    }\n    if (Array.isArray(value)) {\n      return value;\n    }\n    return this._asyncPipe.transform<AdminEditFieldChoice[]>(value as any) || [];\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {ChoicesPipe} from './choices-pipe';\n\n@NgModule({\n  declarations: [\n    ChoicesPipe,\n  ],\n  exports: [\n    ChoicesPipe,\n  ],\n})\nexport class GngtAdminModule {\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Observable} from 'rxjs';\n\nexport abstract class AdminUserInteractionsService {\n  abstract askDeleteConfirm(): Observable<boolean>;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ChangeDetectorRef, Directive, EventEmitter, Input, OnDestroy, Output} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {Model} from '@gngt/core/common';\nimport {ModelActionTypes, ModelService, State as ModelState} from '@gngt/core/model';\nimport {BehaviorSubject, combineLatest, Observable, of as obsOf, Subscription} from 'rxjs';\nimport {\n  filter,\n  map,\n  mapTo,\n  shareReplay,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\n\nimport {AdminEditField} from './edit-field';\nimport {ProcessDataFn} from './process-data-fn';\n\n@Directive()\nexport abstract class AdminEditComponent<\n    T extends Model = Model, S extends ModelState<T> = ModelState<T>, A extends\n        ModelActionTypes = ModelActionTypes> implements OnDestroy {\n  private _title = '';\n  get title(): string {\n    return this._title;\n  }\n  @Input()\n  set title(title: string) {\n    this._title = title;\n    this._cdr.markForCheck();\n  }\n\n  private _listUrl: string;\n  @Input()\n  set listUrl(listUrl: string) {\n    this._listUrl = listUrl;\n  }\n\n  private _cancelLabel = 'Cancel';\n  get cancelLabel(): string {\n    return this._cancelLabel;\n  }\n  @Input()\n  set cancelLabel(cancelLabel: string) {\n    this._cancelLabel = cancelLabel;\n    this._cdr.markForCheck();\n  }\n\n  private _saveLabel = 'Save';\n  get saveLabel(): string {\n    return this._saveLabel;\n  }\n  @Input()\n  set saveLabel(saveLabel: string) {\n    this._saveLabel = saveLabel;\n    this._cdr.markForCheck();\n  }\n\n  private _service: BehaviorSubject<ModelService<T, S, A>|null> =\n      new BehaviorSubject<ModelService<T, S, A>|null>(null);\n  @Input()\n  set service(service: ModelService<T, S, A>) {\n    this._service.next(service);\n  }\n\n  private _fields: AdminEditField[] = [];\n  get fields(): AdminEditField[] {\n    return this._fields;\n  }\n  @Input()\n  set fields(fields: AdminEditField[]) {\n    this._fields = fields;\n    this._updateForm();\n  }\n\n  private _id: BehaviorSubject<number|'new'|null> = new BehaviorSubject<number|'new'|null>(null);\n  @Input()\n  set id(id: number|'new') {\n    this._id.next(id);\n  }\n\n  private _processObject: ProcessDataFn|Observable<ProcessDataFn>;\n  @Input()\n  set processObject(processObject: ProcessDataFn|Observable<ProcessDataFn>) {\n    this._processObject = processObject;\n  }\n\n  private _processFormData: ProcessDataFn|Observable<ProcessDataFn>;\n  @Input()\n  set processFormData(processFormData: ProcessDataFn|Observable<ProcessDataFn>) {\n    this._processFormData = processFormData;\n  }\n\n  private _readonly: boolean;\n  get readonly(): boolean {\n    return this._readonly;\n  }\n  @Input()\n  set readonly(readonly: boolean) {\n    readonly = coerceBooleanProperty(readonly);\n    if (readonly !== this._readonly) {\n      this._readonly = readonly;\n      this._cdr.markForCheck();\n    }\n  }\n\n  private _hideSaveButton: boolean;\n  get hideSaveButton(): boolean {\n    return this._hideSaveButton;\n  }\n  @Input()\n  set hideSaveButton(hideSaveButton: boolean) {\n    hideSaveButton = coerceBooleanProperty(hideSaveButton);\n    if (hideSaveButton !== this._hideSaveButton) {\n      this._hideSaveButton = hideSaveButton;\n      this._cdr.markForCheck();\n    }\n  }\n\n  private _canSave: boolean;\n  get canSave(): boolean {\n    return this._canSave;\n  }\n  @Input()\n  set canSave(canSave: boolean) {\n    canSave = coerceBooleanProperty(canSave);\n    if (canSave !== this._canSave) {\n      this._canSave = canSave;\n      this._cdr.markForCheck();\n    }\n  }\n\n  private _postSaveHook: (obj: T) => Observable<T>;\n  @Input()\n  set postSaveHook(postSaveHook: (obj: T) => Observable<T>) {\n    this._postSaveHook = postSaveHook;\n  }\n\n  readonly form: Observable<FormGroup>;\n\n  private _loading: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  readonly loading: Observable<boolean> = this._loading as Observable<boolean>;\n\n  private _updateFormEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _saveEvt: EventEmitter<void> = new EventEmitter<void>();\n\n  private _saveSub: Subscription = Subscription.EMPTY;\n\n  private _valueChanges$: Observable<any>;\n\n  @Output()\n  get valueChanges$(): Observable<any> {\n    return this._valueChanges$;\n  }\n\n  constructor(private _cdr: ChangeDetectorRef, private _fb: FormBuilder, private _router: Router) {\n    this._processFormData = this._defaultProcessData;\n\n    const objObs = combineLatest(this._service, this._id)\n                       .pipe(\n                           filter(([s, i]) => s != null && i != null),\n                           map(([s, i]) => [s, i] as [ModelService<T, S, A>, number | 'new']),\n                           switchMap(([s, i]) => {\n                             if (i === 'new') {\n                               return obsOf({});\n                             }\n                             return s.get(i);\n                           }),\n                           filter(o => o != null),\n                           switchMap(o => {\n                             if (this._processObject) {\n                               if (this._processObject instanceof Observable) {\n                                 return this._processObject.pipe(\n                                     tap(po => po(o)),\n                                     mapTo(o),\n                                 );\n                               } else {\n                                 this._processObject(o);\n                               }\n                             }\n                             return obsOf(o);\n                           }),\n                           shareReplay(1),\n                       );\n\n    this.form = combineLatest(objObs, this._updateFormEvt)\n                    .pipe(\n                        map(r => {\n                          const model = r[0];\n                          return this._fb.group((this._fields || []).reduce((prev, cur) => {\n                            const val = model ? (model as any)[cur.name] : null;\n                            (prev as any)[cur.name] = [val, cur.validators];\n                            return prev;\n                          }, {}));\n                        }),\n                        shareReplay(1));\n\n    this._valueChanges$ = this.form.pipe(switchMap((form) => form.valueChanges));\n\n    const serviceObs = this._service.pipe(filter(s => s != null));\n\n    this._saveSub =\n        this._saveEvt\n            .pipe(\n                withLatestFrom(this.form, serviceObs, this._id),\n                map(r => r.slice(1) as [FormGroup, ModelService<T, S, A>, number | 'new']),\n                filter(([form, service, _id]) => form != null && service != null && form.valid),\n                switchMap(([form, service, id]) => {\n                  const formValue = {...form.value};\n                  this._defaultProcessData(formValue);\n                  if (this._processFormData) {\n                    if (this._processFormData instanceof Observable) {\n                      return this._processFormData.pipe(\n                          tap(pd => pd(formValue)),\n                          mapTo([\n                            formValue, service, id\n                          ] as [any, ModelService<T, S, A>, number | 'new']),\n                      );\n                    } else {\n                      this._processFormData(formValue);\n                    }\n                  }\n                  return obsOf<[any, ModelService<T, S, A>, number | 'new']>(\n                      [formValue, service, id]);\n                }),\n                tap(r => this._loading.next(true)),\n                switchMap(r => {\n                  const [formValue, service, id] =\n                      r as [any, ModelService<T, S, A>, number | 'new'];\n                  if (id === 'new') {\n                    delete formValue['id'];\n                    return service!.create(formValue);\n                  }\n                  return service!.patch(formValue);\n                }),\n                map(obj => obj as T),\n                take(1),\n                switchMap(r => {\n                  if (this._postSaveHook == null) {\n                    return obsOf(r);\n                  }\n                  return this._postSaveHook(r);\n                }),\n                )\n            .subscribe(\n                () => {\n                  this._loading.next(false);\n                  this.goBack();\n                },\n                () => this._loading.next(false),\n            );\n  }\n\n  goBack(): void {\n    this._router.navigate([this._listUrl]);\n  }\n\n  save(): void {\n    this._saveEvt.emit();\n  }\n\n  ngOnDestroy(): void {\n    this._updateFormEvt.complete();\n    this._saveEvt.complete();\n    this._saveSub.unsubscribe();\n  }\n\n  private _defaultProcessData(value: any): void {\n    this._fields.forEach((field: AdminEditField) => {\n      if (field.subtype) {\n        switch (field.subtype) {\n          case 'number':\n            if (value[field.name] != null && typeof value[field.name] === 'string') {\n              if (value[field.name].includes('.')) {\n                value[field.name] = parseFloat(value[field.name]);\n              } else {\n                value[field.name] = parseInt(value[field.name]);\n              }\n            }\n            break;\n        }\n      }\n    });\n  }\n\n  private _updateForm(): void {\n    this._updateFormEvt.emit();\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ValidatorFn} from '@angular/forms';\nimport {Observable} from 'rxjs';\n\nimport {AdminEditFieldChoice} from './edit-field-choice';\nimport {AdminEditFieldSubtype} from './edit-field-subtype';\nimport {AdminEditFieldType} from './edit-field-type';\n\nexport interface AdminEditField {\n  name: string;\n  label: string;\n  type: AdminEditFieldType;\n  subtype?: AdminEditFieldSubtype;\n  validators?: ValidatorFn[];\n  readonly?: boolean;\n  hidden?: boolean;\n  choices?: AdminEditFieldChoice[]|Observable<AdminEditFieldChoice[]>;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport interface AdminEditFieldChoice {\n  label: string;\n  value: any;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport const enum AdminEditFieldSubtype {\n  Color = 'color',\n  Date = 'date',\n  DateTimeLocal = 'datetime-local',\n  Email = 'email',\n  Month = 'month',\n  Number = 'number',\n  Password = 'password',\n  Search = 'search',\n  Tel = 'tel',\n  Text = 'text',\n  Time = 'time',\n  Url = 'url',\n  Week = 'week'\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport const enum AdminEditFieldType {\n  Input = 'input',\n  TextArea = 'textarea',\n  CheckBox = 'checkbox',\n  Radio = 'radio',\n  Select = 'select',\n  MultipleSelect = 'multipleselect',\n  Autocomplete = 'autocomplete',\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Model} from '@gngt/core/common';\n\nimport {AdminEditField} from './edit-field';\n\nexport interface AdminEditModel<M extends Model> {\n  model: M|null;\n  fields: AdminEditField[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, Directive, EventEmitter, Input, OnDestroy} from '@angular/core';\nimport {Model} from '@gngt/core/common';\nimport {ModelActionTypes, ModelService, State as ModelState} from '@gngt/core/model';\nimport {Observable, of as obsOf, Subscription} from 'rxjs';\nimport {filter, map, switchMap, take} from 'rxjs/operators';\n\nimport {AdminUserInteractionsService} from './admin-user-interactions';\nimport {AdminListHeader} from './list-header';\n\n@Directive()\nexport abstract class AdminListComponent<\n    T extends Model = Model, S extends ModelState<T> = ModelState<T>,\n                                       A extends ModelActionTypes = ModelActionTypes, MS extends\n        ModelService<T, S, A> = ModelService<T, S, A>> implements OnDestroy {\n  get title(): string {\n    return this._title;\n  }\n  @Input()\n  set title(title: string) {\n    this._title = title;\n    this._cdr.markForCheck();\n  }\n  private _title: string;\n\n  get headers(): AdminListHeader[] {\n    return this._headers;\n  }\n  @Input()\n  set headers(headers: AdminListHeader[]) {\n    this._headers = headers;\n    this._cdr.markForCheck();\n  }\n  private _headers: AdminListHeader[] = [];\n\n  get displayedColumns(): string[] {\n    return this._displayedColumns;\n  }\n  @Input()\n  set displayedColumns(displayedColumns: string[]) {\n    this._displayedColumns = ['select', ...displayedColumns];\n    this._cdr.markForCheck();\n  }\n  private _displayedColumns: string[] = [];\n\n  get baseEditUrl(): string {\n    return this._baseEditUrl;\n  }\n  @Input()\n  set baseEditUrl(baseEditUrl: string) {\n    this._baseEditUrl = baseEditUrl;\n    this._cdr.markForCheck();\n  }\n  private _baseEditUrl = '';\n\n  get newItemPath(): string {\n    return this._newItemPath;\n  }\n  @Input()\n  set newItemPath(newItemPath: string) {\n    this._newItemPath = newItemPath;\n    this._cdr.markForCheck();\n  }\n  private _newItemPath = 'new';\n\n  protected _service: MS;\n  @Input()\n  set service(service: MS) {\n    this._service = service;\n    this._initService();\n  }\n\n  protected _actionProcessed: EventEmitter<string> = new EventEmitter<string>();\n  readonly actionProcessed: Observable<string> = this._actionProcessed as Observable<string>;\n\n  private _deletionEvt: EventEmitter<T[]> = new EventEmitter<T[]>();\n  private _deletionSub: Subscription = Subscription.EMPTY;\n\n  constructor(protected _cdr: ChangeDetectorRef, private _aui: AdminUserInteractionsService) {}\n\n  abstract getSelection(): T[];\n  abstract getItems(): T[];\n  abstract clearSelection(): void;\n  abstract selectAll(): void;\n  abstract refreshList(): void;\n\n  isAllSelected() {\n    const numSelected = this.getSelection().length;\n    const numRows = this.getItems().length;\n    return numSelected === numRows;\n  }\n\n  masterToggle(): void {\n    this.isAllSelected() ? this.clearSelection() : this.selectAll();\n  }\n\n  ngOnDestroy(): void {\n    this._deletionSub.unsubscribe();\n    this._deletionEvt.complete();\n  }\n\n  processAction(action: string): void {\n    const selected = this.getSelection();\n    if (!selected || selected.length === 0) {\n      return;\n    }\n    const handlerName = this._getActionHandler(action);\n    const handler: (s: T[]) => void = (this as any)[handlerName];\n    if (handler != null) {\n      handler.call(this, selected);\n    }\n  }\n\n  processDeleteAction(selected: T[]): void {\n    if (this._service == null) {\n      return;\n    }\n    const s = this._aui.askDeleteConfirm().subscribe(res => {\n      if (s) {\n        s.unsubscribe();\n      }\n      if (res) {\n        if (selected.length === 1) {\n          this._service.delete(selected[0]);\n        } else {\n          this._service.deleteAll(selected);\n        }\n\n        this._actionProcessed.emit('delete');\n        this.clearSelection();\n      }\n    });\n  }\n\n  protected _getService(): MS {\n    return this._service;\n  }\n\n  private _getActionHandler(action: string): string {\n    action = action.charAt(0).toUpperCase() + action.substring(1);\n    return `process${action}Action`;\n  }\n\n  private _initService(): void {\n    this._deletionSub.unsubscribe();\n    this._deletionSub = this._deletionEvt\n                            .pipe(\n                                switchMap(\n                                    selected => this._aui.askDeleteConfirm().pipe(\n                                        map(res => ({res, selected})),\n                                        )),\n                                switchMap(r => {\n                                  const {res, selected} = r as {res: boolean, selected: T[]};\n                                  if (res) {\n                                    if (selected.length === 1) {\n                                      return this._service.delete(selected[0]);\n                                    }\n                                    return this._service.deleteAll(selected);\n                                  }\n                                  return obsOf(null);\n                                }),\n                                filter(r => r != null),\n                                take(1),\n                                )\n                            .subscribe(() => {\n                              this._actionProcessed.emit('delete');\n                              this.clearSelection();\n                              this.refreshList();\n                            });\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport interface AdminListHeader {\n  column: string;\n  label: string;\n  sortable?: boolean;\n  hidden?: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport type ProcessDataFn = (value: any) => void;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './admin-module';\nexport * from './admin-user-interactions';\nexport * from './choices-pipe';\nexport * from './edit';\nexport * from './edit-field';\nexport * from './edit-field-choice';\nexport * from './edit-field-subtype';\nexport * from './edit-field-type';\nexport * from './edit-model';\nexport * from './list';\nexport * from './list-header';\nexport * from './process-data-fn';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["obsOf"],"mappings":"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"}