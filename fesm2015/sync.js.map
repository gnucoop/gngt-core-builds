{"version":3,"file":"sync.js","sources":["../../../../../../src/core/sync/local-doc.ts","../../../../../../src/core/sync/registered-models.ts","../../../../../../src/core/sync/sync-options.ts","../../../../../../src/core/sync/sync-utils.ts","../../../../../../src/core/sync/sync-service.ts","../../../../../../src/core/sync/offline-interceptor.ts","../../../../../../src/core/sync/sync-entry.ts","../../../../../../src/core/sync/sync-entry-type.ts","../../../../../../src/core/sync/sync-module.ts","../../../../../../src/core/sync/sync-status.ts","../../../../../../src/core/sync/public-api.ts","../../../../../../src/core/sync/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Model} from '@gngt/core/common';\n\nexport interface LocalDoc<T extends Model> {\n  _id?: string;\n  object_id: number;\n  table_name: string;\n  object: T;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {RegisteredModel} from './registered-model';\n\nexport const SYNC_REGISTERED_MODELS: RegisteredModel[] = [];\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InjectionToken} from '@angular/core';\n\nexport interface SyncOptions {\n  baseUrl: string;\n  changesPath?: string;\n  docsPath?: string;\n  localDatabaseName: string;\n  syncInterval?: number;\n  changesBatchSize?: number;\n  adapter?: string;\n  plugins?: PouchDB.Plugin[];\n}\n\nexport const SYNC_OPTIONS = new InjectionToken<SyncOptions>('SYNC_OPTIONS');\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {SYNC_REGISTERED_MODELS} from './registered-models';\n\nexport function registerSyncModel(endpoint: string, tableName: string): void {\n  if (SYNC_REGISTERED_MODELS.find(r => r.tableName === tableName) == null) {\n    const registeredModel = {tableName, endpoint};\n    SYNC_REGISTERED_MODELS.push(registeredModel);\n    console.log(`Registered sync model ${tableName} with endpoint ${endpoint}`);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Inject, Injectable} from '@angular/core';\nimport {\n  ModelGetParams,\n  ModelJoin,\n  ModelListParams,\n  ModelListResult,\n  ModelQueryParams,\n  ModelQuerySelector,\n  ModelSort\n} from '@gngt/core/common';\nimport * as PouchDB from 'pouchdb';\nimport * as PouchDBFind from 'pouchdb-find';\nimport {\n  BehaviorSubject,\n  from,\n  Observable,\n  of as obsOf,\n  Subscription,\n  throwError,\n  timer,\n  zip\n} from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  delayWhen,\n  exhaustMap,\n  filter,\n  map,\n  mapTo,\n  switchMap,\n  take,\n  tap,\n  toArray\n} from 'rxjs/operators';\n\nimport {LocalDoc} from './local-doc';\nimport {LocalSyncEntry} from './local-sync-entry';\nimport {LocalSyncNumber} from './local-sync-number';\nimport {SyncCheckpoint} from './sync-checkpoint';\nimport {SyncEntry} from './sync-entry';\nimport {SYNC_OPTIONS, SyncOptions} from './sync-options';\nimport {SyncStatus} from './sync-status';\nimport {registerSyncModel} from './sync-utils';\nimport {UpwardChange} from './upward-change';\nimport {UpwardChangeResult} from './upward-change-result';\n\ntype DatabaseContent = LocalDoc<any>|LocalSyncEntry|LocalSyncNumber|SyncCheckpoint;\n\nconst pouchDBStatic: PouchDB.Static = (<any>PouchDB).default || PouchDB;\nconst pouchDBFindPlugin: PouchDB.Plugin = (<any>PouchDBFind).default || PouchDBFind;\n\n@Injectable()\nexport class SyncService {\n  private _status: BehaviorSubject<SyncStatus> =\n      new BehaviorSubject<SyncStatus>({status: 'initializing'});\n  readonly status: Observable<SyncStatus> = this._status as Observable<SyncStatus>;\n\n  private _timerSub: Subscription = Subscription.EMPTY;\n  private _syncing = false;\n  private _database: PouchDB.Database<DatabaseContent>;\n  private readonly _remoteCheckpointKey = 'gngt_remote_sync_checkpoint';\n  private readonly _localCheckpointKey = 'gngt_local_sync_checkpoint';\n  private readonly _localSyncNumber = 'gngt_local_sync_number';\n  private readonly _localSyncEntryPrefix = 'gngt_local_sync_entry_';\n  private readonly _syncUrl: string;\n  private readonly _changesUrl: string;\n  private readonly _relationalModelIdx: PouchDB.Find.CreateIndexOptions = {\n    index: {name: 'relational_model_idx', fields: ['table_name', 'object_id']}\n  };\n  private readonly _databaseInit: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  private readonly _databaseIsInit: Observable<boolean>;\n\n  constructor(@Inject(SYNC_OPTIONS) private _opts: SyncOptions, private _httpClient: HttpClient) {\n    if (this._opts.syncInterval == null) {\n      this._opts.syncInterval = 300000;\n    }\n    if (this._opts.changesBatchSize == null) {\n      this._opts.changesBatchSize = 50;\n    }\n\n    this._syncUrl = `${this._opts.baseUrl}${this._opts.changesPath || 'changes'}`;\n    this._changesUrl = `${this._opts.baseUrl}${this._opts.docsPath || 'docs'}`;\n    this._initLocalDatabase();\n    this._databaseIsInit = this._databaseInit.pipe(filter(i => i));\n  }\n\n  registerSyncModel(endPoint: string, tableName: string): void {\n    registerSyncModel(endPoint, tableName);\n  }\n\n  start(immediate = true): void {\n    if (this._syncing) {\n      return;\n    }\n    this._syncing = true;\n    this._timerSub = timer(immediate ? 0 : this._opts.syncInterval, this._opts.syncInterval)\n                         .pipe(\n                             delayWhen(_ => this._databaseIsInit),\n                             )\n                         .subscribe(_ => this._checkSync());\n  }\n\n  stop(): void {\n    if (!this._syncing) {\n      return;\n    }\n    this._timerSub.unsubscribe();\n    this._syncing = false;\n  }\n\n  get(tableName: string, params: ModelGetParams): Observable<any> {\n    const db = this._getLocalDocsDb();\n    return this._databaseIsInit.pipe(\n        exhaustMap(_ => this._relationalModelIdxObs()),\n        exhaustMap(rmi => {\n          const findPromise = db.find(this._modelGetFindRequest(\n              tableName, params, rmi as PouchDB.Find.CreateIndexResponse<LocalDoc<any>>));\n          return from(findPromise)\n              .pipe(\n                  take(1),\n                  map(res => ({res, rmi})),\n              );\n        }),\n        switchMap(r => {\n          const {res, rmi} = r as {\n            res: PouchDB.Find.FindResponse<LocalDoc<any>>,\n            rmi: PouchDB.Find.CreateIndexResponse<LocalDoc<any>>\n          };\n          if (res.docs.length === 1) {\n            let obj = this._subObject(res.docs[0].object, params.fields);\n            if (params.joins != null) {\n              const observables = params.joins.map(join => {\n                const findPromise = db.find(this._modelGetFindRequest(\n                    join.model, {id: obj[join.property], fields: join.fields}, rmi));\n                return from(findPromise)\n                    .pipe(\n                        take(1),\n                        map(relRes => {\n                          const related = relRes as PouchDB.Find.FindResponse<LocalDoc<any>>;\n                          return related.docs.length === 1 ? related.docs[0].object : null;\n                        }),\n                        map(related => ({join, related})),\n                    );\n              });\n              return zip(...observables)\n                  .pipe(\n                      map(joins => {\n                        joins.forEach(joinEntry => {\n                          obj[joinEntry.join.property] = joinEntry.related;\n                        });\n                        return obj;\n                      }),\n                  );\n            }\n            return obsOf(obj);\n          }\n          return throwError('not_found');\n        }),\n        take(1),\n    );\n  }\n\n  list(tableName: string, params: ModelListParams): Observable<ModelListResult<any>> {\n    const db = this._getLocalDocsDb();\n    return this._databaseIsInit.pipe(\n        exhaustMap(_ => this._relationalModelIdxObs({tableName, sort: params.sort})),\n        exhaustMap(idx => {\n          let findReq = this._modelListFindRequest(\n              tableName, params, idx as PouchDB.Find.CreateIndexResponse<LocalDoc<any>>);\n          return from(db.find(findReq))\n              .pipe(\n                  take(1),\n                  catchError(err => {\n                    if (err.error === 'no_usable_index') {\n                      delete findReq.use_index;\n                      delete findReq.sort;\n                      return from(db.find(findReq)).pipe(take(1));\n                    }\n                    return throwError(err);\n                  }),\n              );\n        }),\n        switchMap(\n            res => this._relationalModelIdxObs().pipe(\n                map(idx => ({res, idx})),\n                )),\n        switchMap(curRes => {\n          const {res, idx} = curRes as {\n            res: PouchDB.Find.FindResponse<LocalDoc<any>>,\n            idx: PouchDB.Find.CreateIndexResponse<LocalDoc<any>>\n          };\n          if (params.joins != null) {\n            const joinTables: {[table: string]: number[]} = params.joins.reduce((prev, cur) => {\n              const fk = cur.foreignKey || cur.property;\n              prev[cur.model] = res.docs.map(d => d.object[fk]);\n              return prev;\n            }, {} as {[table: string]: number[]});\n            return zip(...params.joins.map(join => {\n                     const joinModel = join.offlineModel || join.model;\n                     const req = this._modelListFindRequest(joinModel, {fields: join.fields}, idx);\n                     req.selector['object_id'] = {'$in': joinTables[join.model]};\n                     return from(db.find(req))\n                         .pipe(\n                             take(1),\n                             map(related => ({\n                                   join,\n                                   related:\n                                       (related as PouchDB.Find.FindResponse<LocalDoc<any>>).docs\n                                 })),\n                         );\n                   }))\n                .pipe(\n                    map(joins => {\n                      return res.docs.map(doc => {\n                        const obj = doc.object;\n                        const joinsObj = (joins as {\n                                           join: ModelJoin;\n                                           related: PouchDB.Core.ExistingDocument<LocalDoc<any>>[];\n                                         }[]).reduce((jo, joinEntry) => {\n                          const prop = joinEntry.join.property;\n                          const fk = joinEntry.join.foreignKey || joinEntry.join.property;\n                          const rel = joinEntry.related.find(r => r.object_id === obj[fk]);\n                          jo[prop] = rel != null ? rel.object : null;\n                          return jo;\n                        }, {} as any);\n                        return {...this._subObject(obj, params.fields), ...joinsObj};\n                      });\n                    }),\n                );\n          }\n          return obsOf(res.docs.map(d => this._subObject(d.object, params.fields)));\n        }),\n        map(r => {\n          const results = r as any[];\n          return {\n            count: results.length,\n            results,\n            previous: null,\n            next: null,\n          };\n        }),\n        take(1),\n    );\n  }\n\n  create(tableName: string, object: any): Observable<any> {\n    return this._databaseIsInit.pipe(\n        exhaustMap(_ => this._nextObjectId(tableName).pipe(take(1))),\n        exhaustMap(id => {\n          object = {id, ...object};\n          const localDoc = {table_name: tableName, object_id: id};\n          return from(this._database.post({...localDoc, object} as any))\n                     .pipe(\n                         exhaustMap(d => {\n                           const doc = d as PouchDB.Core.Response;\n                           return this\n                               ._createLocalSyncEntry(\n                                   {doc_id: doc.id, entry_type: 'insert', ...localDoc} as\n                                   Partial<LocalSyncEntry>)\n                               .pipe(\n                                   map(() => object),\n                               );\n                         }),\n                         ) as Observable<any>;\n        }),\n        take(1),\n    );\n  }\n\n  update(tableName: string, id: number, object: any): Observable<any> {\n    const db = this._getLocalDocsDb();\n    return this._databaseIsInit.pipe(\n        switchMap(_ => this._relationalModelIdxObs()),\n        exhaustMap(\n            idx =>\n                from(db.find(this._modelGetFindRequest(\n                         tableName, {id}, idx as PouchDB.Find.CreateIndexResponse<LocalDoc<any>>)))\n                    .pipe(\n                        take(1),\n                        )),\n        exhaustMap(curRes => {\n          const res = curRes as PouchDB.Find.FindResponse<LocalDoc<any>>;\n          if (res.docs.length !== 1) {\n            return throwError('not_found');\n          }\n          const localDoc = {...res.docs[0], object};\n          return from(db.post(localDoc))\n              .pipe(\n                  map(r => ({res: r, localDoc})),\n                  take(1),\n              );\n        }),\n        exhaustMap(r => {\n          const {res, localDoc} = r as\n              {res: PouchDB.Core.Response, localDoc: PouchDB.Core.ExistingDocument<LocalDoc<any>>};\n          const syncEntry: Partial<LocalSyncEntry> = {\n            doc_id: res.id,\n            table_name: tableName,\n            object_id: localDoc.object_id,\n            entry_type: 'update'\n          };\n          return this._createLocalSyncEntry(syncEntry).pipe(\n              map(() => localDoc.object),\n              take(1),\n          );\n        }),\n        take(1),\n    );\n  }\n\n  delete(tableName: string, id: number): Observable<any> {\n    const db = this._getLocalDocsDb();\n    return this._databaseIsInit.pipe(\n        switchMap(_ => this._relationalModelIdxObs()),\n        exhaustMap(\n            idx =>\n                from(db.find(this._modelGetFindRequest(\n                         tableName, {id}, idx as PouchDB.Find.CreateIndexResponse<LocalDoc<any>>)))\n                    .pipe(\n                        take(1),\n                        )),\n        exhaustMap(curRes => {\n          const res = curRes as PouchDB.Find.FindResponse<LocalDoc<any>>;\n          if (res.docs.length !== 1) {\n            return throwError('not_found');\n          }\n          const localDoc = res.docs[0];\n          return from(db.remove(localDoc))\n              .pipe(\n                  map(r => ({res: r, localDoc})),\n                  take(1),\n              );\n        }),\n        exhaustMap(r => {\n          const {res, localDoc} = r as\n              {res: PouchDB.Core.Response, localDoc: PouchDB.Core.ExistingDocument<LocalDoc<any>>};\n          const syncEntry: Partial<LocalSyncEntry> = {\n            doc_id: res.id,\n            table_name: tableName,\n            object_id: localDoc.object_id,\n            entry_type: 'delete'\n          };\n          return this._createLocalSyncEntry(syncEntry).pipe(\n              map(() => localDoc.object),\n              take(1),\n          );\n        }),\n        take(1),\n    );\n  }\n\n  deleteAll(tableName: string, ids: number[]): Observable<any[]> {\n    const db = this._getLocalDocsDb();\n    return this._databaseIsInit.pipe(\n        switchMap(_ => this._relationalModelIdxObs()),\n        exhaustMap(\n            idx =>\n                from(db.find(this._modelBulkIdsFindRequest(\n                         tableName, ids, idx as PouchDB.Find.CreateIndexResponse<LocalDoc<any>>)))\n                    .pipe(\n                        take(1),\n                        )),\n        concatMap(r => {\n          const res = r as PouchDB.Find.FindResponse<LocalDoc<any>>;\n          if (res.docs.length !== 1) {\n            return throwError('not_found') as\n                Observable<PouchDB.Core.ExistingDocument<LocalDoc<any>>>;\n          }\n          return from(res.docs) as Observable<PouchDB.Core.ExistingDocument<LocalDoc<any>>>;\n        }),\n        concatMap(ld => {\n          const localDoc = ld as PouchDB.Core.ExistingDocument<LocalDoc<any>>;\n          return from(db.remove(localDoc))\n              .pipe(\n                  map(res => ({res, localDoc})),\n              );\n        }),\n        concatMap(r => {\n          const {res, localDoc} = r as\n              {res: PouchDB.Core.Response, localDoc: PouchDB.Core.ExistingDocument<LocalDoc<any>>};\n          const syncEntry: Partial<LocalSyncEntry> = {\n            doc_id: res.id,\n            table_name: tableName,\n            object_id: localDoc.object_id,\n            entry_type: 'delete'\n          };\n          return this._createLocalSyncEntry(syncEntry).pipe(\n              map(() => localDoc.object),\n          );\n        }),\n        take(ids.length),\n        toArray(),\n    );\n  }\n\n  query(tableName: string, params: ModelQueryParams): Observable<ModelListResult<any>> {\n    const db = this._getLocalDocsDb();\n    return this._databaseIsInit.pipe(\n               exhaustMap(\n                   _ => (this._relationalModelIdxObs(\n                             {tableName, selector: params.selector, sort: params.sort}) as\n                         Observable<PouchDB.Find.CreateIndexResponse<LocalDoc<any>>>)\n                            .pipe(\n                                take(1),\n                                )),\n               exhaustMap(idx => {\n                 let findReq = this._modelQueryFindRequest(\n                     tableName, params, idx as PouchDB.Find.CreateIndexResponse<LocalDoc<any>>);\n                 return (from(db.find(findReq)) as\n                         Observable<PouchDB.Find.FindResponse<LocalDoc<any>>>)\n                            .pipe(\n                                take(1),\n                                catchError(err => {\n                                  if (err.error === 'no_usable_index') {\n                                    delete findReq.use_index;\n                                    delete findReq.sort;\n                                    return from(db.find(findReq)).pipe(take(1));\n                                  }\n                                  return throwError(err);\n                                }),\n                                ) as Observable<PouchDB.Find.FindResponse<LocalDoc<any>>>;\n               }),\n               switchMap(r => {\n                 const res = r as PouchDB.Find.FindResponse<LocalDoc<any>>;\n                 return (this._relationalModelIdxObs() as\n                         Observable<PouchDB.Find.CreateIndexResponse<LocalDoc<any>>>)\n                     .pipe(\n                         map(idx => ({res, idx})),\n                     );\n               }),\n               switchMap(curRes => {\n                 const {res, idx} = curRes as {\n                   res: PouchDB.Find.FindResponse<LocalDoc<any>>,\n                   idx: PouchDB.Find.CreateIndexResponse<LocalDoc<any>>\n                 };\n                 if (params.joins != null) {\n                   const joinTables: {[table: string]: number[]} =\n                       params.joins.reduce((prev, cur) => {\n                         const fk = cur.foreignKey || cur.property;\n                         prev[cur.model] = res.docs.map(d => d.object[fk]);\n                         return prev;\n                       }, {} as {[table: string]: number[]});\n                   return zip(...params.joins.map(join => {\n                            const joinModel = join.offlineModel || join.model;\n                            const req =\n                                this._modelListFindRequest(joinModel, {fields: join.fields}, idx);\n                            req.selector['object_id'] = {'$in': joinTables[join.model]};\n                            return from(db.find(req))\n                                .pipe(\n                                    map(related => ({\n                                          join,\n                                          related:\n                                              (related as PouchDB.Find.FindResponse<LocalDoc<any>>)\n                                                  .docs\n                                        })),\n                                    take(1),\n                                );\n                          }))\n                       .pipe(\n                           map(joins => {\n                             return res.docs.map(doc => {\n                               const obj = doc.object;\n                               const joinsObj =\n                                   (joins as {\n                                     join: ModelJoin;\n                                     related: PouchDB.Core.ExistingDocument<LocalDoc<any>>[];\n                                   }[]).reduce((jo, joinEntry) => {\n                                     const prop = joinEntry.join.property;\n                                     const fk =\n                                         joinEntry.join.foreignKey || joinEntry.join.property;\n                                     const rel =\n                                         joinEntry.related.find(r => r.object_id === obj[fk]);\n                                     jo[prop] = rel != null ? rel.object : null;\n                                     return jo;\n                                   }, {} as any);\n                               return {...this._subObject(obj, params.fields), ...joinsObj};\n                             });\n                           }),\n                       );\n                 }\n                 return obsOf(res.docs.map(d => this._subObject(d.object, params.fields)));\n               }),\n               map(results => ({\n                     count: (results as any[]).length,\n                     results,\n                     previous: null,\n                     next: null,\n                   })),\n               take(1),\n               ) as Observable<ModelListResult<any>>;\n  }\n\n  private _getLocalDocsDb(): PouchDB.Database<LocalDoc<any>> {\n    return this._database as PouchDB.Database<LocalDoc<any>>;\n  }\n\n  private _getLocalSyncDb(): PouchDB.Database<LocalSyncEntry> {\n    return this._database as PouchDB.Database<LocalSyncEntry>;\n  }\n\n  private _getLocalSyncNumberDb(): PouchDB.Database<LocalSyncNumber> {\n    return this._database as PouchDB.Database<LocalSyncNumber>;\n  }\n\n  private _getSyncCheckpointDb(): PouchDB.Database<SyncCheckpoint> {\n    return this._database as PouchDB.Database<SyncCheckpoint>;\n  }\n\n  private _createLocalSyncEntry(syncEntry: Partial<LocalSyncEntry>): Observable<number> {\n    return this._getNextLocalSyncNumber().pipe(\n               exhaustMap(syncNumber => {\n                 syncEntry._id = `_local/${this._localSyncEntryPrefix}${syncNumber}`;\n                 syncEntry.sequence = syncNumber;\n                 return from(this._database.put<LocalSyncEntry>(syncEntry as LocalSyncEntry))\n                     .pipe(\n                         take(1),\n                         exhaustMap(_ => this._setLocalSyncNumber(syncNumber).pipe(take(1))),\n                     );\n               }),\n               ) as Observable<number>;\n  }\n\n  private _setLocalSyncNumber(syncNumber: number): Observable<number> {\n    const db = this._getLocalSyncNumberDb();\n    const id = `_local/${this._localSyncNumber}`;\n    return from(db.get(id))\n        .pipe(\n            take(1),\n            catchError(_ => obsOf({_id: id, number: 0} as LocalSyncNumber)),\n            exhaustMap(\n                doc => from(db.post({...(doc as LocalSyncNumber), number: syncNumber}))\n                           .pipe(\n                               take(1),\n                               )),\n            map(_ => syncNumber),\n        );\n  }\n\n  private _getNextLocalSyncNumber(): Observable<number> {\n    const db = this._getLocalSyncNumberDb();\n    return from(db.get(`_local/${this._localSyncNumber}`))\n               .pipe(\n                   take(1),\n                   map(doc => (doc as LocalSyncNumber).number + 1),\n                   catchError(_ => obsOf(1)),\n                   ) as Observable<number>;\n  }\n\n  private _nextObjectId(tableName: string): Observable<number> {\n    const sort = {object_id: 'desc'} as ModelSort;\n    const db = this._getLocalDocsDb();\n    return this._relationalModelIdxObs({tableName, sort})\n        .pipe(\n            exhaustMap(\n                idx => (from(db.find(this._modelListFindRequest(tableName, {sort}, idx))) as\n                        Observable<PouchDB.Find.FindResponse<LocalDoc<any>>>)\n                           .pipe(\n                               take(1),\n                               )),\n            map(r => {\n              const res = r as PouchDB.Find.FindResponse<LocalDoc<any>>;\n              return res.docs.length > 0 ? res.docs[0].object_id + 1 : 1;\n            }),\n        );\n  }\n\n  private _relationalModelIdxObs(\n      idxDef?: {tableName: string, selector?: ModelQuerySelector, sort?: ModelSort}):\n      Observable<PouchDB.Find.CreateIndexResponse<LocalDoc<any>>> {\n    if (idxDef != null && (idxDef.sort != null || idxDef.selector != null)) {\n      let sortFields = [] as {[key: string]: 'asc' | 'desc'}[];\n      let selectorFields = [] as {[key: string]: 'asc' | 'desc'}[];\n      let dir = 'asc' as 'asc' | 'desc';\n      if (idxDef.sort != null) {\n        const normSort = this._normalizeSortParam(idxDef.sort);\n        sortFields = normSort.fields;\n        dir = normSort.dir;\n      }\n      if (idxDef.selector != null) {\n        const normSel = this._normalizeSelector(idxDef.selector);\n        selectorFields = Object.keys(normSel).map(k => {\n          const obj = {} as any;\n          obj[k] = dir;\n          return obj;\n        });\n      }\n      if (sortFields.length > 0 || selectorFields.length > 0) {\n        const fields = [...selectorFields, {table_name: dir}, ...sortFields];\n        return (from(this._database.createIndex({\n                  index: {\n                    name: this._generateIndexName(idxDef.tableName, fields),\n                    fields: fields as any\n                  }\n                })) as Observable<PouchDB.Find.CreateIndexResponse<LocalDoc<any>>>)\n            .pipe(\n                take(1),\n            );\n      }\n    }\n    return (from(this._database.createIndex(this._relationalModelIdx)) as\n            Observable<PouchDB.Find.CreateIndexResponse<LocalDoc<any>>>)\n        .pipe(\n            take(1),\n        );\n  }\n\n  private _generateIndexName(tableName: string, fields: ModelSort[]): string {\n    return `idx___${tableName}___${\n        fields\n            .map(f => {\n              const key = Object.keys(f)[0];\n              return `${key.replace('.', '_')}__${f[key]}`;\n            })\n            .join('___')}`;\n  }\n\n  private _subObject(obj: any, fields?: string[]): any {\n    if (obj == null || fields == null) {\n      return obj;\n    }\n    obj = obj || {};\n    const subObj: any = {};\n    (fields || []).forEach(f => subObj[f] = obj[f]);\n    return subObj;\n  }\n\n  private _checkSync(): void {\n    this._checkUpwardSync();\n  }\n\n  private _checkUpwardSync(): void {\n    zip(this._getLastLocalCheckpoint(), this._getNextLocalSyncNumber())\n        .pipe(\n            exhaustMap(r => {\n              const [checkpoint, syncNumber] = r as [number, number];\n              const localSyncDb = this._getLocalSyncDb();\n              const gets: Observable<LocalSyncEntry>[] = [];\n              const firstId = checkpoint + 1;\n              const lastId = Math.min(firstId + this._opts.changesBatchSize! - 1, syncNumber - 1);\n              if (lastId <= checkpoint) {\n                return obsOf(false);\n              }\n\n              const hasNext = lastId < syncNumber - 1;\n\n              this.stop();\n\n              for (let i = firstId; i <= lastId; i++) {\n                gets.push(\n                    from(localSyncDb.get(`_local/${this._localSyncEntryPrefix}${i}`)) as\n                    Observable<LocalSyncEntry>);\n              }\n              return zip(...gets).pipe(\n                  exhaustMap(getsRes => {\n                    const entries = getsRes as LocalSyncEntry[];\n                    const localDocsDb = this._getLocalDocsDb();\n                    const opts = {keys: entries.map(e => e.doc_id), include_docs: true};\n                    return from(localDocsDb.allDocs(opts))\n                        .pipe(\n                            map(ld => {\n                              const localDocs = ld as PouchDB.Core.AllDocsResponse<LocalDoc<any>>;\n                              const docs = entries.map(\n                                  (syncEntry, i) =>\n                                      ({syncEntry, localDoc: localDocs.rows[i].doc!}));\n                              return {hasNext, docs};\n                            }),\n                            take(1),\n                        );\n                  }),\n                  exhaustMap(\n                      res => this._processUpwardChanges(\n                          res as {hasNext: boolean, docs: UpwardChange[]})),\n                  take(1),\n              );\n            }),\n            )\n        .subscribe(\n            hasNext => {\n              if (hasNext) {\n                this._checkUpwardSync();\n              } else {\n                this._checkDownwardSync();\n              }\n            },\n            err => {\n              this._emitSyncError(err);\n              this.start(false);\n            });\n  }\n\n  private _checkDownwardSync(): void {\n    this._getLastRemoteCheckpoint()\n        .pipe(exhaustMap(since => {\n          const params = `since=${since}&batchSize=${this._opts.changesBatchSize}`;\n          return this._httpClient.get<SyncEntry[]>(`${this._syncUrl}?${params}`);\n        }))\n        .subscribe(changes => {\n          this.stop();\n          this._processDownwardChanges(changes as SyncEntry[]);\n        });\n  }\n\n  private _getLastLocalCheckpoint(): Observable<number> {\n    return this._getLastCheckpoint(this._localCheckpointKey);\n  }\n\n  private _getLastRemoteCheckpoint(): Observable<number> {\n    return this._getLastCheckpoint(this._remoteCheckpointKey);\n  }\n\n  private _getLastCheckpoint(checkpointKey: string): Observable<number> {\n    const db = this._getSyncCheckpointDb();\n    return from(db.get(`_local/${checkpointKey}`))\n               .pipe(\n                   map(d => (d as SyncCheckpoint).checkpoint),\n                   catchError(_ => obsOf(0)),\n                   ) as Observable<number>;\n  }\n\n  private _setLastLocalCheckpoint(checkpoint: number): Observable<number> {\n    return this._setLastCheckpoint(this._localCheckpointKey, checkpoint);\n  }\n\n  private _setLastRemoteCheckpoint(checkpoint: number): Observable<number> {\n    return this._setLastCheckpoint(this._remoteCheckpointKey, checkpoint);\n  }\n\n  private _setLastCheckpoint(checkpointKey: string, checkpoint: number): Observable<number> {\n    const db = this._getSyncCheckpointDb();\n    const docKey = `_local/${checkpointKey}`;\n    const doc = {_id: docKey, checkpoint} as SyncCheckpoint;\n    return from(db.get(docKey))\n        .pipe(\n            catchError(_ => obsOf({} as SyncCheckpoint)),\n            take(1),\n            exhaustMap(d => from(db.put({...(d as SyncCheckpoint), ...doc})).pipe(take(1))),\n            catchError(_ => throwError('checkpoint_set_failed')),\n            mapTo(checkpoint),\n        );\n  }\n\n  private _processUpwardChanges(p: {hasNext: boolean, docs: UpwardChange[]}): Observable<boolean> {\n    const payload = p.docs.map(doc => {\n      return {\n        sequence: doc.syncEntry.sequence,\n        table_name: doc.syncEntry.table_name,\n        object_id: doc.localDoc.object.id,\n        entry_type: doc.syncEntry.entry_type,\n        object: doc.localDoc.object\n      };\n    });\n    this._emitSyncSyncing();\n    return this._httpClient.post<UpwardChangeResult[]>(this._syncUrl, payload)\n        .pipe(\n            map(res => ({res, seq: null})),\n            catchError((err: HttpErrorResponse) => {\n              if (err.status !== 409) {\n                return throwError(err);\n              }\n              p.hasNext = true;\n              return this._resolveUpwardConflict(p.docs, err.error)\n                  .pipe(\n                      map(seq => ({res: err.error as UpwardChangeResult[], seq})),\n                  );\n            }),\n            exhaustMap(r => {\n              const {res, seq} = r as {res: UpwardChangeResult[], seq: number};\n              const conflictError = res.findIndex(e => e.error === 'conflict');\n              const lastValidIdx = conflictError - 1;\n              const localDocsDb = this._getLocalDocsDb();\n              const docsToDel = p.docs.filter(\n                  (d, idx) => d.syncEntry.entry_type === 'insert' && idx <= lastValidIdx);\n              const sequence = seq != null ? seq : res[res.length - 1].sequence;\n              if (docsToDel.length === 0) {\n                return obsOf(sequence);\n              }\n              return from(localDocsDb.allDocs({\n                       keys: docsToDel.map(d => d.syncEntry.doc_id),\n                       include_docs: true,\n                     }))\n                  .pipe(\n                      take(1),\n                      exhaustMap(\n                          result =>\n                              from(localDocsDb.bulkDocs(\n                                       (result as PouchDB.Core.AllDocsResponse<LocalDoc<any>>)\n                                           .rows.map(row => ({...row.doc, _deleted: true} as any))))\n                                  .pipe(\n                                      take(1),\n                                      )),\n                      map(_ => sequence),\n                  );\n            }),\n            exhaustMap(\n                sequence => sequence as number >= 0 ?\n                    this._setLastLocalCheckpoint(sequence as number) :\n                    obsOf(null)),\n            map(_ => p.hasNext),\n        );\n  }\n\n  private _resolveUpwardConflict(docs: UpwardChange[], result: UpwardChangeResult[]):\n      Observable<number> {\n    const conflictIdx = result.findIndex(r => r.ok === false && r.error === 'conflict')!;\n    const conflict = result[conflictIdx];\n    const conflictDoc = docs.find(d => d.syncEntry.sequence === conflict.sequence)!;\n    const checkpoint = conflictIdx >= 0 ? result[conflictIdx].sequence - 1 : -1;\n    const localDocsDb = this._getLocalDocsDb();\n    return this._databaseIsInit.pipe(\n        switchMap(_ => this._relationalModelIdxObs()),\n        exhaustMap(idx => {\n          const findReq = this._modelListFindRequest(\n              conflictDoc.syncEntry.table_name, {},\n              idx as PouchDB.Find.CreateIndexResponse<LocalDoc<any>>);\n          findReq.selector['object_id'] = {$gte: conflictDoc.syncEntry.object_id};\n          return from(localDocsDb.find(findReq)).pipe(take(1));\n        }),\n        exhaustMap(res => {\n          const updDocs = (res as PouchDB.Find.FindResponse<LocalDoc<any>>).docs.map((doc, idx) => {\n            doc.object_id = doc.object.id = conflict.extra.next_id + idx;\n            return doc;\n          });\n          return from(localDocsDb.bulkDocs(updDocs)).pipe(take(1));\n        }),\n        map(_ => checkpoint),\n    );\n  }\n\n  private _processDownwardChanges(syncEntries: SyncEntry[]): void {\n    if (syncEntries == null || syncEntries.length === 0) {\n      this._emitSyncPaused();\n      this.start(false);\n      return;\n    }\n    const changes = syncEntries.map(s => s.id);\n    const url = this._changesUrl;\n    this._httpClient.post<SyncEntry[]>(url, {changes})\n        .pipe(\n            catchError(() => {\n              this._emitSyncError('network_error');\n              return obsOf([]) as Observable<SyncEntry[]>;\n            }),\n            map(r => r as SyncEntry[]),\n            switchMap(docs => {\n              return from(changes.map(\n                         change => ({change, doc: (docs || []).find(d => d.id === change)}))) as\n                  Observable<{change: number, doc: SyncEntry}>;\n            }),\n            tap(() => this._emitSyncSyncing()),\n            map(r => r as {change: number, doc: SyncEntry}),\n            concatMap(({change, doc}) => {\n              const syncEntry = syncEntries.find(s => s.id === change);\n              if (syncEntry == null) {\n                return throwError(`missing_change_${change}`);\n              }\n              if (syncEntry.entry_type === 'delete' && doc == null) {\n                return this._processDownwardChange(syncEntry);\n              }\n              return (\n                  doc == null ? throwError(`missing_change_${change}`) :\n                                this._processDownwardChange(doc));\n            }),\n            map(change => change as SyncEntry),\n            concatMap((change: SyncEntry) => this._setLastRemoteCheckpoint(change.id)),\n            )\n        .subscribe(\n            _ => {},\n            error => {\n              this._emitSyncError(error);\n              this.start(false);\n            },\n            () => {\n              const hasMore = changes.length > 0;\n              if (!hasMore) {\n                this._emitSyncPaused();\n              }\n              this.start(hasMore);\n            });\n  }\n\n  private _emitSyncError(error: string): void {\n    this._status.next({status: 'error', error});\n  }\n\n  private _emitSyncPaused(): void {\n    this._status.next({status: 'paused'});\n  }\n\n  private _emitSyncSyncing(): void {\n    this._status.next({status: 'syncing'});\n  }\n\n  private _processDownwardChange(change: SyncEntry): Observable<SyncEntry> {\n    if (change.entry_type !== 'insert' && change.entry_type !== 'update' &&\n        change.entry_type !== 'delete') {\n      return throwError('invalid_entry_type');\n    }\n\n    const baseReq =\n        this._relationalModelIdxObs().pipe(\n            exhaustMap(\n                idx => from(this._database.find(this._syncEntryFindRequest(change, idx)))\n                           .pipe(take(1))),\n            ) as Observable<PouchDB.Find.FindResponse<DatabaseContent>>;\n\n    if (change.entry_type === 'insert') {\n      return baseReq.pipe(\n          exhaustMap(localDocs => {\n            if (localDocs.docs.length !== 0) {\n              return throwError('existing_doc');\n            }\n            return from(this._database.post(this._syncEntryToLocalDoc(change))).pipe(take(1));\n          }),\n          mapTo(change),\n      );\n    }\n\n    return baseReq.pipe(\n               exhaustMap(localDocs => {\n                 if (localDocs.docs.length !== 1) {\n                   return throwError('unexisting_doc');\n                 }\n\n                 const localDoc = localDocs.docs[0];\n                 const op = from(\n                     change.entry_type === 'update' ?\n                         this._database.put({...localDoc, object: change.object}) :\n                         this._database.remove(localDoc));\n                 return op.pipe(\n                     take(1),\n                     mapTo(change),\n                 );\n               }),\n               ) as Observable<SyncEntry>;\n  }\n\n  private _modelGetFindRequest(\n      tableName: string, params: ModelGetParams,\n      index?: PouchDB.Find.CreateIndexResponse<LocalDoc<any>>):\n      PouchDB.Find.FindRequest<LocalDoc<any>> {\n    const req: PouchDB.Find.FindRequest<LocalDoc<any>> = {\n      selector: {table_name: tableName, object_id: params.id}\n    };\n    if (index != null) {\n      const idxParts = ((index as any).id || '').split('/');\n      if (idxParts.length === 2) {\n        req.use_index = idxParts[1];\n      }\n    }\n    return req;\n  }\n\n  private _modelBulkIdsFindRequest(\n      tableName: string,\n      ids: number[],\n      index?: PouchDB.Find.CreateIndexResponse<LocalDoc<any>>,\n      ): PouchDB.Find.FindRequest<LocalDoc<any>> {\n    const req = {selector: {table_name: tableName, object_id: {$in: ids}}} as\n        PouchDB.Find.FindRequest<LocalDoc<any>>;\n    if (index != null) {\n      const idxParts = ((index as any).id || '').split('/');\n      if (idxParts.length === 2) {\n        req.use_index = idxParts[1];\n      }\n    }\n    return req;\n  }\n\n  private _modelQueryFindRequest(\n      tableName: string, params: ModelQueryParams,\n      index?: PouchDB.Find.CreateIndexResponse<LocalDoc<any>>):\n      PouchDB.Find.FindRequest<LocalDoc<any>> {\n    const req: PouchDB.Find.FindRequest<LocalDoc<any>> =\n        this._modelListFindRequest(tableName, params);\n    if (index != null) {\n      const idxParts = ((index as any).id || '').split('/');\n      if (idxParts.length === 2) {\n        req.use_index = idxParts[1];\n      }\n    }\n    return {...req, selector: {...req.selector, ...this._normalizeSelector(params.selector)}};\n  }\n\n  private _modelListFindRequest(\n      tableName: string, params: ModelListParams,\n      index?: PouchDB.Find.CreateIndexResponse<LocalDoc<any>>):\n      PouchDB.Find.FindRequest<LocalDoc<any>> {\n    const req: PouchDB.Find.FindRequest<LocalDoc<any>> = {selector: {table_name: tableName}};\n    if (params.sort != null) {\n      const {dir, fields} = this._normalizeSortParam(params.sort);\n      req.sort = [{table_name: dir}, ...fields];\n    } else {\n      req.sort = ['table_name', 'object_id'];\n    }\n    if (params.start != null) {\n      req.skip = params.start;\n    }\n    if (params.limit != null && params.limit >= 0) {\n      req.limit = params.limit;\n    }\n    if (index != null) {\n      const idxParts = ((index as any).id || '').split('/');\n      if (idxParts.length === 2) {\n        req.use_index = idxParts[1];\n      }\n    }\n    return req;\n  }\n\n  private _normalizeSelector(selector: PouchDB.Find.Selector): PouchDB.Find.Selector {\n    const normSelector: PouchDB.Find.Selector = {};\n    Object.keys(selector).forEach(key => {\n      normSelector[`object.${key}`] = selector[key];\n    });\n    return normSelector;\n  }\n\n  private _normalizeSortParam(sortParam: {[prop: string]: 'asc'|'desc'}):\n      {dir: 'asc'|'desc', fields: ModelSort[]} {\n    let dir: 'asc'|'desc' = 'asc';\n    const fields = Object.keys(sortParam).map((key, i) => {\n      const sort: any = {};\n      if (i == 0) {\n        dir = sortParam[key];\n      }\n      sort[key !== 'object_id' ? `object.${key}` : key] = dir;\n      return sort;\n    });\n    return {dir, fields};\n  }\n\n  private _syncEntryFindRequest(\n      entry: SyncEntry, index?: PouchDB.Find.CreateIndexResponse<LocalDoc<any>>):\n      PouchDB.Find.FindRequest<LocalDoc<any>> {\n    const req = {selector: this._syncEntryFindSelector(entry)} as\n        PouchDB.Find.FindRequest<LocalDoc<any>>;\n    if (index != null) {\n      const idxParts = ((index as any).id || '').split('/');\n      if (idxParts.length === 2) {\n        req.use_index = idxParts[1];\n      }\n    }\n    return req;\n  }\n\n  private _syncEntryFindSelector(entry: SyncEntry): PouchDB.Find.Selector {\n    return {\n      table_name: entry.table_name,\n      object_id: entry.object_id,\n    };\n  }\n\n  private _initLocalDatabase(): void {\n    pouchDBStatic.plugin(pouchDBFindPlugin);\n    const plugins = this._opts.plugins || [];\n    plugins.forEach(plugin => pouchDBStatic.plugin(plugin));\n    this._database = new pouchDBStatic(this._opts.localDatabaseName, {\n      revs_limit: 1,\n      adapter: this._opts.adapter,\n    });\n\n    this._database.createIndex(this._relationalModelIdx)\n        .then(_ => {\n          this._emitSyncPaused();\n          this._databaseInit.next(true);\n        })\n        .catch(_ => this._emitSyncError('indexing_failed'));\n  }\n\n  private _syncEntryToLocalDoc(entry: SyncEntry): LocalDoc<any> {\n    return {object_id: entry.object_id, table_name: entry.table_name, object: entry.object};\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\n\nimport {RegisteredModel} from './registered-model';\nimport {SYNC_REGISTERED_MODELS} from './registered-models';\nimport {SyncService} from './sync-service';\n\n@Injectable()\nexport class OfflineInterceptor implements HttpInterceptor {\n  constructor(private _syncService: SyncService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n               catchError((e: HttpErrorResponse) => {\n                 if (e.status === 0) {\n                   const models = this._checkOfflineRequest(req);\n                   if (models.length > 0) {\n                     return this._doOfflineRequest(req, models[0], e);\n                   }\n                 }\n                 return throwError(e);\n               }),\n               ) as Observable<HttpEvent<any>>;\n  }\n\n  private _doOfflineRequest(\n      req: HttpRequest<any>, model: RegisteredModel,\n      reqError: HttpErrorResponse): Observable<HttpEvent<any>> {\n    const method = req.method.toLowerCase();\n    const {exactMatch, relativeUrl} = this._analyzeRequestUrl(req, model);\n    if (exactMatch) {\n      if (method === 'get') {\n        const limit = <any>req.params.get('limit');\n        const start = <any>req.params.get('start');\n        const sort = <any>req.params.get('sort');\n        const fields = <any>req.params.get('fields');\n        const joins = <any>req.params.get('joins');\n        return this._syncService.list(model.tableName, {limit, start, sort, fields, joins})\n            .pipe(\n                catchError(_ => throwError(reqError)),\n                map(res =>\n                        new HttpResponse({status: 200, statusText: 'OK', url: req.url, body: res})),\n            );\n      } else if (method === 'post') {\n        const obj = req.body;\n        return this._syncService.create(model.tableName, obj)\n            .pipe(\n                catchError(_ => throwError(reqError)),\n                map(res => new HttpResponse(\n                        {status: 201, statusText: 'OK', url: req.url, body: res})));\n      }\n    } else {\n      if (relativeUrl.length === 1) {\n        const lastUrlPart = relativeUrl[0];\n        if (lastUrlPart === 'delete_all') {\n          const ids = req.body.ids;\n          if (ids != null && ids instanceof Array && ids.length > 0) {\n            return this._syncService.deleteAll(model.tableName, ids)\n                .pipe(\n                    catchError(_ => throwError(reqError)),\n                    map(res => new HttpResponse(\n                            {status: 200, statusText: 'OK', url: req.url, body: res})));\n          }\n        } else if (lastUrlPart === 'query') {\n          const params = req.body;\n          return this._syncService.query(model.tableName, params)\n              .pipe(\n                  catchError(_ => throwError(reqError)),\n                  map(res => new HttpResponse(\n                          {status: 200, statusText: 'OK', url: req.url, body: res})));\n        } else {\n          const id = parseInt(lastUrlPart, 10);\n          if (!isNaN(id) && id > 0) {\n            let op: Observable<any>|null = null;\n            let successStatus: number = 200;\n            const obj = req.body;\n            if (method === 'get') {\n              op = this._syncService.get(model.tableName, {id});\n              successStatus = 201;\n            } else if (method === 'patch' || method === 'put') {\n              op = this._syncService.update(model.tableName, id, obj);\n            } else if (method === 'delete') {\n              op = this._syncService.delete(model.tableName, id);\n            }\n            if (op != null) {\n              return op.pipe(\n                  catchError(_ => throwError(reqError)),\n                  map(res => new HttpResponse(\n                          {status: successStatus, statusText: 'OK', url: req.url, body: res})),\n              );\n            }\n          }\n        }\n      }\n    }\n    return throwError(reqError);\n  }\n\n  private _analyzeRequestUrl(req: HttpRequest<any>, model: RegisteredModel):\n      {exactMatch: boolean, relativeUrl: string[]} {\n    const exactMatch = new RegExp('^' + model.endpoint + '$').test(req.url);\n    if (exactMatch) {\n      return {exactMatch, relativeUrl: []};\n    }\n    const baseUrlParts = model.endpoint.split(/\\/+/);\n    const reqUrlParts = req.url.split(/\\/+/);\n    return {exactMatch, relativeUrl: reqUrlParts.slice(baseUrlParts.length)};\n  }\n\n  private _checkOfflineRequest(req: HttpRequest<any>): RegisteredModel[] {\n    const urlParts = req.url.split('?');\n    const urlPaths = urlParts[0].split('/');\n    const urlPathsLen = urlPaths.length;\n    let lastUrlPathIdx = urlPathsLen - 1;\n    if (urlPaths[lastUrlPathIdx] === '') {\n      lastUrlPathIdx -= 1;\n    }\n    const lastUrlPath = urlPaths[lastUrlPathIdx];\n    const intVal = parseInt(lastUrlPath, 10);\n    if (lastUrlPath === 'query' || (!isNaN(intVal) && `${intVal}` === lastUrlPath)) {\n      urlPaths.splice(lastUrlPathIdx, 1);\n    }\n    const url = urlPaths.join('/');\n    return SYNC_REGISTERED_MODELS.filter(m => m.endpoint === url);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {SyncEntryType} from './sync-entry-type';\n\nexport interface SyncEntry {\n  id: number;\n  table_name: string;\n  object_id: number;\n  entry_type: SyncEntryType;\n  object?: any;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport type SyncEntryType = 'insert'|'update'|'delete';\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {OfflineInterceptor} from './offline-interceptor';\nimport {SYNC_OPTIONS, SyncOptions} from './sync-options';\nimport {SyncService} from './sync-service';\n\n@NgModule({})\nexport class SyncModule {\n  static forRoot(opts: SyncOptions): ModuleWithProviders<SyncModule> {\n    return {\n      ngModule: SyncModule,\n      providers: [\n        SyncService,\n        {provide: HTTP_INTERCEPTORS, useClass: OfflineInterceptor, multi: true},\n        {provide: SYNC_OPTIONS, useValue: opts},\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\ninterface BaseSyncStatus {\n  status: 'initializing'|'paused'|'syncing'|'error';\n}\n\nexport interface SyncStatusInitializing extends BaseSyncStatus {\n  status: 'initializing';\n}\n\nexport interface SyncStatusPaused extends BaseSyncStatus {\n  status: 'paused';\n}\n\nexport interface SyncStatusSyncing extends BaseSyncStatus {\n  status: 'syncing';\n}\n\nexport interface SyncStatusError extends BaseSyncStatus {\n  status: 'error';\n  error: string;\n}\n\nexport type SyncStatus = SyncStatusInitializing|SyncStatusPaused|SyncStatusSyncing|SyncStatusError;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Gnucoop Angular Toolkit (gngt).\n *\n * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './local-doc';\nexport * from './offline-interceptor';\nexport * from './sync-entry';\nexport * from './sync-entry-type';\nexport * from './sync-module';\nexport * from './sync-options';\nexport * from './sync-service';\nexport * from './sync-status';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["obsOf"],"mappings":"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"}